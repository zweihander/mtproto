package serialize

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_decompressData(t *testing.T) {
	tests := []struct {
		name    string
		args    []byte
		want    []byte
		wantErr bool
	}{
		{
			name: "test1",
			args: []byte{
				0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x4b, 0x77, 0xe0, 0x36, 0xf6, 0xe0,
				0x63, 0x60, 0x70, 0x5d, 0xbd, 0x3c, 0xbe, 0x78, 0xe7, 0xf2, 0x78, 0xf3, 0xe9, 0x95, 0x7b, 0x98,
				0x18, 0x18, 0x18, 0x44, 0x8f, 0x6c, 0x95, 0x11, 0x06, 0xd2, 0xbc, 0x0b, 0xb7, 0x4b, 0x00, 0x29,
				0x06, 0x46, 0x20, 0xe6, 0x33, 0x34, 0xb1, 0xd4, 0x33, 0x34, 0x35, 0xd1, 0x33, 0x34, 0x37, 0xd5,
				0x33, 0x35, 0x66, 0xd8, 0xcd, 0x08, 0x91, 0x17, 0x20, 0x20, 0xcf, 0x08, 0x95, 0x57, 0x37, 0x32,
				0x30, 0x30, 0xb4, 0x32, 0x48, 0x32, 0xb2, 0xb0, 0x4a, 0x33, 0x32, 0x4e, 0xb1, 0x4a, 0x03, 0x73,
				0x81, 0x00, 0x95, 0x48, 0x84, 0xe9, 0x03, 0xd9, 0xcb, 0x84, 0x62, 0xae, 0x99, 0xb9, 0x9e, 0xa9,
				0x21, 0x8a, 0xbd, 0xf8, 0xe4, 0x99, 0xa0, 0xf2, 0xfc, 0xc8, 0xf2, 0x86, 0xa6, 0x86, 0xc8, 0xee,
				0x62, 0x42, 0xb8, 0xcb, 0xcc, 0x3c, 0xd9, 0xca, 0xc0, 0x24, 0xd5, 0x02, 0xe4, 0x2e, 0x23, 0x7c,
				0xee, 0x62, 0x26, 0x4d, 0x5f, 0x12, 0xb2, 0x7f, 0x98, 0x51, 0xdc, 0x03, 0x0c, 0x27, 0x43, 0x03,
				0x03, 0x64, 0xff, 0xe0, 0x93, 0x67, 0x84, 0xca, 0x63, 0x09, 0x47, 0x63, 0x42, 0xe1, 0xc8, 0x82,
				0x1e, 0x4e, 0x96, 0xa8, 0xe1, 0x88, 0x4f, 0x9e, 0x11, 0x2a, 0x8f, 0xc5, 0xbf, 0x26, 0xf8, 0xec,
				0x65, 0xc2, 0x34, 0xd7, 0x54, 0xcf, 0xd2, 0x8c, 0x01, 0x39, 0x1c, 0x49, 0x30, 0x37, 0x09, 0xd9,
				0x3d, 0xac, 0x18, 0xe1, 0x90, 0x06, 0xd2, 0x67, 0x4a, 0x28, 0x1c, 0x40, 0xfa, 0x78, 0x2d, 0x0d,
				0x81, 0xc1, 0x6a, 0xa1, 0x67, 0x6a, 0x06, 0x0c, 0x61, 0x23, 0x06, 0x94, 0x70, 0xc0, 0x29, 0x9f,
				0x58, 0x50, 0x66, 0xac, 0x57, 0x5c, 0x92, 0x9a, 0xa3, 0x97, 0x9c, 0x9f, 0xcb, 0xc0, 0x70, 0x02,
				0xa8, 0xce, 0x81, 0x97, 0x99, 0x21, 0x05, 0x48, 0x07, 0x98, 0x30, 0x33, 0x74, 0x00, 0x33, 0x8b,
				0x41, 0x29, 0x03, 0xc3, 0x83, 0xc9, 0x2c, 0x60, 0xfa, 0x0e, 0xd0, 0xa0, 0x84, 0x57, 0x90, 0x74,
				0x02, 0x52, 0xcb, 0xb0, 0x98, 0x89, 0xe1, 0xff, 0xff, 0xff, 0xf5, 0x20, 0xcc, 0xf0, 0x4a, 0x05,
				0x2c, 0x06, 0xb2, 0xab, 0xc1, 0x8a, 0x13, 0x4c, 0x83, 0xcc, 0x51, 0xf0, 0x63, 0x60, 0x98, 0x10,
				0xcf, 0x08, 0xd6, 0x2f, 0xa0, 0x0e, 0xb4, 0x33, 0xa3, 0xa4, 0xa4, 0xa0, 0xd8, 0x4a, 0x5f, 0xbf,
				0x44, 0x2f, 0x37, 0x55, 0x1f, 0x18, 0xf7, 0xe9, 0x99, 0x69, 0x5c, 0x69, 0xf9, 0xa5, 0x45, 0xc5,
				0x85, 0xa5, 0x89, 0x45, 0xa9, 0x0c, 0x2c, 0x49, 0x99, 0x79, 0xe9, 0xb0, 0xc8, 0x15, 0x80, 0x50,
				0x00, 0x8f, 0xce, 0x15, 0xf8, 0xd0, 0x03, 0x00, 0x00,
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := decompressData(tt.args)
			if (err != nil) != tt.wantErr {
				t.Errorf("decompressData() error = %v, wantErr %v", err, tt.wantErr)
				return
			}

			assert.Equal(t, tt.want, got)
		})
	}
}
