// Code generated by generate-tl-files; DO NOT EDIT.

package telegram

import(
	"github.com/xelaj/mtproto/serialize"
)

type AccountAcceptAuthorizationParams struct {
	BotId       int32                       `validate:"required"`
	Scope       string                      `validate:"required"`
	PublicKey   string                      `validate:"required"`
	ValueHashes []*SecureValueHash          `validate:"required"`
	Credentials *SecureCredentialsEncrypted `validate:"required"`
}

func (e *AccountAcceptAuthorizationParams) CRC() uint32 {
	return uint32(0xe7027c94)
}

func (c *Client) AccountAcceptAuthorization(params *AccountAcceptAuthorizationParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountCancelPasswordEmailParams struct{}

func (e *AccountCancelPasswordEmailParams) CRC() uint32 {
	return uint32(0xc1cbd5b6)
}

func (c *Client) AccountCancelPasswordEmail() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountCancelPasswordEmailParams{}, &resp)
	return resp, err
}

type AccountChangePhoneParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
	PhoneCode     string `validate:"required"`
}

func (e *AccountChangePhoneParams) CRC() uint32 {
	return uint32(0x70c32edb)
}

func (c *Client) AccountChangePhone(params *AccountChangePhoneParams) (User, error) {
	var resp User
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountCheckUsernameParams struct {
	Username string `validate:"required"`
}

func (e *AccountCheckUsernameParams) CRC() uint32 {
	return uint32(0x2714d86c)
}

func (c *Client) AccountCheckUsername(params *AccountCheckUsernameParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountConfirmPasswordEmailParams struct {
	Code string `validate:"required"`
}

func (e *AccountConfirmPasswordEmailParams) CRC() uint32 {
	return uint32(0x8fdf1920)
}

func (c *Client) AccountConfirmPasswordEmail(params *AccountConfirmPasswordEmailParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountConfirmPhoneParams struct {
	PhoneCodeHash string `validate:"required"`
	PhoneCode     string `validate:"required"`
}

func (e *AccountConfirmPhoneParams) CRC() uint32 {
	return uint32(0x5f2178c3)
}

func (c *Client) AccountConfirmPhone(params *AccountConfirmPhoneParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountCreateThemeParams struct {
	// flags position
	Slug     string              `validate:"required"`
	Title    string              `validate:"required"`
	Document InputDocument       `flag:"2"`
	Settings *InputThemeSettings `flag:"3"`
}

func (e *AccountCreateThemeParams) CRC() uint32 {
	return uint32(0x8432c21f)
}

func (c *Client) AccountCreateTheme(params *AccountCreateThemeParams) (Theme, error) {
	var resp Theme
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountDeleteAccountParams struct {
	Reason string `validate:"required"`
}

func (e *AccountDeleteAccountParams) CRC() uint32 {
	return uint32(0x418d4e0b)
}

func (c *Client) AccountDeleteAccount(params *AccountDeleteAccountParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountDeleteSecureValueParams struct {
	Types []SecureValueType `validate:"required"`
}

func (e *AccountDeleteSecureValueParams) CRC() uint32 {
	return uint32(0xb880bc4b)
}

func (c *Client) AccountDeleteSecureValue(params *AccountDeleteSecureValueParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountFinishTakeoutSessionParams struct {
	// flags position
	Success bool `flag:"0,encoded_in_bitflags"`
}

func (e *AccountFinishTakeoutSessionParams) CRC() uint32 {
	return uint32(0x1d2652ee)
}

func (c *Client) AccountFinishTakeoutSession(params *AccountFinishTakeoutSessionParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetAccountTTLParams struct{}

func (e *AccountGetAccountTTLParams) CRC() uint32 {
	return uint32(0x8fc711d)
}

func (c *Client) AccountGetAccountTTL() (AccountDaysTTL, error) {
	var resp AccountDaysTTL
	err := c.MakeRequest2(&AccountGetAccountTTLParams{}, &resp)
	return resp, err
}

type AccountGetAllSecureValuesParams struct{}

func (e *AccountGetAllSecureValuesParams) CRC() uint32 {
	return uint32(0xb288bc7d)
}

func (c *Client) AccountGetAllSecureValues() (SecureValue, error) {
	var resp SecureValue
	err := c.MakeRequest2(&AccountGetAllSecureValuesParams{}, &resp)
	return resp, err
}

type AccountGetAuthorizationFormParams struct {
	BotId     int32  `validate:"required"`
	Scope     string `validate:"required"`
	PublicKey string `validate:"required"`
}

func (e *AccountGetAuthorizationFormParams) CRC() uint32 {
	return uint32(0xb86ba8e1)
}

func (c *Client) AccountGetAuthorizationForm(params *AccountGetAuthorizationFormParams) (AccountAuthorizationForm, error) {
	var resp AccountAuthorizationForm
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetAuthorizationsParams struct{}

func (e *AccountGetAuthorizationsParams) CRC() uint32 {
	return uint32(0xe320c158)
}

func (c *Client) AccountGetAuthorizations() (AccountAuthorizations, error) {
	var resp AccountAuthorizations
	err := c.MakeRequest2(&AccountGetAuthorizationsParams{}, &resp)
	return resp, err
}

type AccountGetAutoDownloadSettingsParams struct{}

func (e *AccountGetAutoDownloadSettingsParams) CRC() uint32 {
	return uint32(0x56da0b3f)
}

func (c *Client) AccountGetAutoDownloadSettings() (AccountAutoDownloadSettings, error) {
	var resp AccountAutoDownloadSettings
	err := c.MakeRequest2(&AccountGetAutoDownloadSettingsParams{}, &resp)
	return resp, err
}

type AccountGetContactSignUpNotificationParams struct{}

func (e *AccountGetContactSignUpNotificationParams) CRC() uint32 {
	return uint32(0x9f07c728)
}

func (c *Client) AccountGetContactSignUpNotification() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountGetContactSignUpNotificationParams{}, &resp)
	return resp, err
}

type AccountGetContentSettingsParams struct{}

func (e *AccountGetContentSettingsParams) CRC() uint32 {
	return uint32(0x8b9b4dae)
}

func (c *Client) AccountGetContentSettings() (AccountContentSettings, error) {
	var resp AccountContentSettings
	err := c.MakeRequest2(&AccountGetContentSettingsParams{}, &resp)
	return resp, err
}

type AccountGetGlobalPrivacySettingsParams struct{}

func (e *AccountGetGlobalPrivacySettingsParams) CRC() uint32 {
	return uint32(0xeb2b4cf6)
}

func (c *Client) AccountGetGlobalPrivacySettings() (GlobalPrivacySettings, error) {
	var resp GlobalPrivacySettings
	err := c.MakeRequest2(&AccountGetGlobalPrivacySettingsParams{}, &resp)
	return resp, err
}

type AccountGetMultiWallPapersParams struct {
	Wallpapers []InputWallPaper `validate:"required"`
}

func (e *AccountGetMultiWallPapersParams) CRC() uint32 {
	return uint32(0x65ad71dc)
}

func (c *Client) AccountGetMultiWallPapers(params *AccountGetMultiWallPapersParams) (WallPaper, error) {
	var resp WallPaper
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetNotifyExceptionsParams struct {
	// flags position
	CompareSound bool            `flag:"1,encoded_in_bitflags"`
	Peer         InputNotifyPeer `flag:"0"`
}

func (e *AccountGetNotifyExceptionsParams) CRC() uint32 {
	return uint32(0x53577479)
}

func (c *Client) AccountGetNotifyExceptions(params *AccountGetNotifyExceptionsParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetNotifySettingsParams struct {
	Peer InputNotifyPeer `validate:"required"`
}

func (e *AccountGetNotifySettingsParams) CRC() uint32 {
	return uint32(0x12b3ad31)
}

func (c *Client) AccountGetNotifySettings(params *AccountGetNotifySettingsParams) (PeerNotifySettings, error) {
	var resp PeerNotifySettings
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetPasswordParams struct{}

func (e *AccountGetPasswordParams) CRC() uint32 {
	return uint32(0x548a30f5)
}

func (c *Client) AccountGetPassword() (AccountPassword, error) {
	var resp AccountPassword
	err := c.MakeRequest2(&AccountGetPasswordParams{}, &resp)
	return resp, err
}

type AccountGetPasswordSettingsParams struct {
	Password InputCheckPasswordSRP `validate:"required"`
}

func (e *AccountGetPasswordSettingsParams) CRC() uint32 {
	return uint32(0x9cd4eaf9)
}

func (c *Client) AccountGetPasswordSettings(params *AccountGetPasswordSettingsParams) (AccountPasswordSettings, error) {
	var resp AccountPasswordSettings
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetPrivacyParams struct {
	Key InputPrivacyKey `validate:"required"`
}

func (e *AccountGetPrivacyParams) CRC() uint32 {
	return uint32(0xdadbc950)
}

func (c *Client) AccountGetPrivacy(params *AccountGetPrivacyParams) (AccountPrivacyRules, error) {
	var resp AccountPrivacyRules
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetSecureValueParams struct {
	Types []SecureValueType `validate:"required"`
}

func (e *AccountGetSecureValueParams) CRC() uint32 {
	return uint32(0x73665bc2)
}

func (c *Client) AccountGetSecureValue(params *AccountGetSecureValueParams) (SecureValue, error) {
	var resp SecureValue
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetThemeParams struct {
	Format     string     `validate:"required"`
	Theme      InputTheme `validate:"required"`
	DocumentId int64      `validate:"required"`
}

func (e *AccountGetThemeParams) CRC() uint32 {
	return uint32(0x8d9d742b)
}

func (c *Client) AccountGetTheme(params *AccountGetThemeParams) (Theme, error) {
	var resp Theme
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetThemesParams struct {
	Format string `validate:"required"`
	Hash   int32  `validate:"required"`
}

func (e *AccountGetThemesParams) CRC() uint32 {
	return uint32(0x285946f8)
}

func (c *Client) AccountGetThemes(params *AccountGetThemesParams) (AccountThemes, error) {
	var resp AccountThemes
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetTmpPasswordParams struct {
	Password InputCheckPasswordSRP `validate:"required"`
	Period   int32                 `validate:"required"`
}

func (e *AccountGetTmpPasswordParams) CRC() uint32 {
	return uint32(0x449e0b51)
}

func (c *Client) AccountGetTmpPassword(params *AccountGetTmpPasswordParams) (AccountTmpPassword, error) {
	var resp AccountTmpPassword
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetWallPaperParams struct {
	Wallpaper InputWallPaper `validate:"required"`
}

func (e *AccountGetWallPaperParams) CRC() uint32 {
	return uint32(0xfc8ddbea)
}

func (c *Client) AccountGetWallPaper(params *AccountGetWallPaperParams) (WallPaper, error) {
	var resp WallPaper
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetWallPapersParams struct {
	Hash int32 `validate:"required"`
}

func (e *AccountGetWallPapersParams) CRC() uint32 {
	return uint32(0xaabb1763)
}

func (c *Client) AccountGetWallPapers(params *AccountGetWallPapersParams) (AccountWallPapers, error) {
	var resp AccountWallPapers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountGetWebAuthorizationsParams struct{}

func (e *AccountGetWebAuthorizationsParams) CRC() uint32 {
	return uint32(0x182e6d6f)
}

func (c *Client) AccountGetWebAuthorizations() (AccountWebAuthorizations, error) {
	var resp AccountWebAuthorizations
	err := c.MakeRequest2(&AccountGetWebAuthorizationsParams{}, &resp)
	return resp, err
}

type AccountInitTakeoutSessionParams struct {
	// flags position
	Contacts          bool  `flag:"0,encoded_in_bitflags"`
	MessageUsers      bool  `flag:"1,encoded_in_bitflags"`
	MessageChats      bool  `flag:"2,encoded_in_bitflags"`
	MessageMegagroups bool  `flag:"3,encoded_in_bitflags"`
	MessageChannels   bool  `flag:"4,encoded_in_bitflags"`
	Files             bool  `flag:"5,encoded_in_bitflags"`
	FileMaxSize       int32 `flag:"5"`
}

func (e *AccountInitTakeoutSessionParams) CRC() uint32 {
	return uint32(0xf05b4804)
}

func (c *Client) AccountInitTakeoutSession(params *AccountInitTakeoutSessionParams) (AccountTakeout, error) {
	var resp AccountTakeout
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountInstallThemeParams struct {
	// flags position
	Dark   bool       `flag:"0,encoded_in_bitflags"`
	Format string     `flag:"1"`
	Theme  InputTheme `flag:"1"`
}

func (e *AccountInstallThemeParams) CRC() uint32 {
	return uint32(0x7ae43737)
}

func (c *Client) AccountInstallTheme(params *AccountInstallThemeParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountInstallWallPaperParams struct {
	Wallpaper InputWallPaper     `validate:"required"`
	Settings  *WallPaperSettings `validate:"required"`
}

func (e *AccountInstallWallPaperParams) CRC() uint32 {
	return uint32(0xfeed5769)
}

func (c *Client) AccountInstallWallPaper(params *AccountInstallWallPaperParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountRegisterDeviceParams struct {
	// flags position
	NoMuted    bool    `flag:"0,encoded_in_bitflags"`
	TokenType  int32   `validate:"required"`
	Token      string  `validate:"required"`
	AppSandbox bool    `validate:"required"`
	Secret     []byte  `validate:"required"`
	OtherUids  []int32 `validate:"required"`
}

func (e *AccountRegisterDeviceParams) CRC() uint32 {
	return uint32(0x68976c6f)
}

func (c *Client) AccountRegisterDevice(params *AccountRegisterDeviceParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountReportPeerParams struct {
	Peer   InputPeer    `validate:"required"`
	Reason ReportReason `validate:"required"`
}

func (e *AccountReportPeerParams) CRC() uint32 {
	return uint32(0xae189d5f)
}

func (c *Client) AccountReportPeer(params *AccountReportPeerParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountResendPasswordEmailParams struct{}

func (e *AccountResendPasswordEmailParams) CRC() uint32 {
	return uint32(0x7a7f2a15)
}

func (c *Client) AccountResendPasswordEmail() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountResendPasswordEmailParams{}, &resp)
	return resp, err
}

type AccountResetAuthorizationParams struct {
	Hash int64 `validate:"required"`
}

func (e *AccountResetAuthorizationParams) CRC() uint32 {
	return uint32(0xdf77f3bc)
}

func (c *Client) AccountResetAuthorization(params *AccountResetAuthorizationParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountResetNotifySettingsParams struct{}

func (e *AccountResetNotifySettingsParams) CRC() uint32 {
	return uint32(0xdb7e1747)
}

func (c *Client) AccountResetNotifySettings() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountResetNotifySettingsParams{}, &resp)
	return resp, err
}

type AccountResetWallPapersParams struct{}

func (e *AccountResetWallPapersParams) CRC() uint32 {
	return uint32(0xbb3b9804)
}

func (c *Client) AccountResetWallPapers() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountResetWallPapersParams{}, &resp)
	return resp, err
}

type AccountResetWebAuthorizationParams struct {
	Hash int64 `validate:"required"`
}

func (e *AccountResetWebAuthorizationParams) CRC() uint32 {
	return uint32(0x2d01b9ef)
}

func (c *Client) AccountResetWebAuthorization(params *AccountResetWebAuthorizationParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountResetWebAuthorizationsParams struct{}

func (e *AccountResetWebAuthorizationsParams) CRC() uint32 {
	return uint32(0x682d2594)
}

func (c *Client) AccountResetWebAuthorizations() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AccountResetWebAuthorizationsParams{}, &resp)
	return resp, err
}

type AccountSaveAutoDownloadSettingsParams struct {
	// flags position
	Low      bool                  `flag:"0,encoded_in_bitflags"`
	High     bool                  `flag:"1,encoded_in_bitflags"`
	Settings *AutoDownloadSettings `validate:"required"`
}

func (e *AccountSaveAutoDownloadSettingsParams) CRC() uint32 {
	return uint32(0x76f36233)
}

func (c *Client) AccountSaveAutoDownloadSettings(params *AccountSaveAutoDownloadSettingsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSaveSecureValueParams struct {
	Value          *InputSecureValue `validate:"required"`
	SecureSecretId int64             `validate:"required"`
}

func (e *AccountSaveSecureValueParams) CRC() uint32 {
	return uint32(0x899fe31d)
}

func (c *Client) AccountSaveSecureValue(params *AccountSaveSecureValueParams) (SecureValue, error) {
	var resp SecureValue
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSaveThemeParams struct {
	Theme  InputTheme `validate:"required"`
	Unsave bool       `validate:"required"`
}

func (e *AccountSaveThemeParams) CRC() uint32 {
	return uint32(0xf257106c)
}

func (c *Client) AccountSaveTheme(params *AccountSaveThemeParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSaveWallPaperParams struct {
	Wallpaper InputWallPaper     `validate:"required"`
	Unsave    bool               `validate:"required"`
	Settings  *WallPaperSettings `validate:"required"`
}

func (e *AccountSaveWallPaperParams) CRC() uint32 {
	return uint32(0x6c5a5b37)
}

func (c *Client) AccountSaveWallPaper(params *AccountSaveWallPaperParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSendChangePhoneCodeParams struct {
	PhoneNumber string        `validate:"required"`
	Settings    *CodeSettings `validate:"required"`
}

func (e *AccountSendChangePhoneCodeParams) CRC() uint32 {
	return uint32(0x82574ae5)
}

func (c *Client) AccountSendChangePhoneCode(params *AccountSendChangePhoneCodeParams) (AuthSentCode, error) {
	var resp AuthSentCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSendConfirmPhoneCodeParams struct {
	Hash     string        `validate:"required"`
	Settings *CodeSettings `validate:"required"`
}

func (e *AccountSendConfirmPhoneCodeParams) CRC() uint32 {
	return uint32(0x1b3faa88)
}

func (c *Client) AccountSendConfirmPhoneCode(params *AccountSendConfirmPhoneCodeParams) (AuthSentCode, error) {
	var resp AuthSentCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSendVerifyEmailCodeParams struct {
	Email string `validate:"required"`
}

func (e *AccountSendVerifyEmailCodeParams) CRC() uint32 {
	return uint32(0x7011509f)
}

func (c *Client) AccountSendVerifyEmailCode(params *AccountSendVerifyEmailCodeParams) (AccountSentEmailCode, error) {
	var resp AccountSentEmailCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSendVerifyPhoneCodeParams struct {
	PhoneNumber string        `validate:"required"`
	Settings    *CodeSettings `validate:"required"`
}

func (e *AccountSendVerifyPhoneCodeParams) CRC() uint32 {
	return uint32(0xa5a356f9)
}

func (c *Client) AccountSendVerifyPhoneCode(params *AccountSendVerifyPhoneCodeParams) (AuthSentCode, error) {
	var resp AuthSentCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSetAccountTTLParams struct {
	Ttl *AccountDaysTTL `validate:"required"`
}

func (e *AccountSetAccountTTLParams) CRC() uint32 {
	return uint32(0x2442485e)
}

func (c *Client) AccountSetAccountTTL(params *AccountSetAccountTTLParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSetContactSignUpNotificationParams struct {
	Silent bool `validate:"required"`
}

func (e *AccountSetContactSignUpNotificationParams) CRC() uint32 {
	return uint32(0xcff43f61)
}

func (c *Client) AccountSetContactSignUpNotification(params *AccountSetContactSignUpNotificationParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSetContentSettingsParams struct {
	// flags position
	SensitiveEnabled bool `flag:"0,encoded_in_bitflags"`
}

func (e *AccountSetContentSettingsParams) CRC() uint32 {
	return uint32(0xb574b16b)
}

func (c *Client) AccountSetContentSettings(params *AccountSetContentSettingsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSetGlobalPrivacySettingsParams struct {
	Settings *GlobalPrivacySettings `validate:"required"`
}

func (e *AccountSetGlobalPrivacySettingsParams) CRC() uint32 {
	return uint32(0x1edaaac2)
}

func (c *Client) AccountSetGlobalPrivacySettings(params *AccountSetGlobalPrivacySettingsParams) (GlobalPrivacySettings, error) {
	var resp GlobalPrivacySettings
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountSetPrivacyParams struct {
	Key   InputPrivacyKey    `validate:"required"`
	Rules []InputPrivacyRule `validate:"required"`
}

func (e *AccountSetPrivacyParams) CRC() uint32 {
	return uint32(0xc9f81ce8)
}

func (c *Client) AccountSetPrivacy(params *AccountSetPrivacyParams) (AccountPrivacyRules, error) {
	var resp AccountPrivacyRules
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUnregisterDeviceParams struct {
	TokenType int32   `validate:"required"`
	Token     string  `validate:"required"`
	OtherUids []int32 `validate:"required"`
}

func (e *AccountUnregisterDeviceParams) CRC() uint32 {
	return uint32(0x3076c4bf)
}

func (c *Client) AccountUnregisterDevice(params *AccountUnregisterDeviceParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateDeviceLockedParams struct {
	Period int32 `validate:"required"`
}

func (e *AccountUpdateDeviceLockedParams) CRC() uint32 {
	return uint32(0x38df3532)
}

func (c *Client) AccountUpdateDeviceLocked(params *AccountUpdateDeviceLockedParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateNotifySettingsParams struct {
	Peer     InputNotifyPeer          `validate:"required"`
	Settings *InputPeerNotifySettings `validate:"required"`
}

func (e *AccountUpdateNotifySettingsParams) CRC() uint32 {
	return uint32(0x84be5b93)
}

func (c *Client) AccountUpdateNotifySettings(params *AccountUpdateNotifySettingsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdatePasswordSettingsParams struct {
	Password    InputCheckPasswordSRP         `validate:"required"`
	NewSettings *AccountPasswordInputSettings `validate:"required"`
}

func (e *AccountUpdatePasswordSettingsParams) CRC() uint32 {
	return uint32(0xa59b102f)
}

func (c *Client) AccountUpdatePasswordSettings(params *AccountUpdatePasswordSettingsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateProfileParams struct {
	// flags position
	FirstName string `flag:"0"`
	LastName  string `flag:"1"`
	About     string `flag:"2"`
}

func (e *AccountUpdateProfileParams) CRC() uint32 {
	return uint32(0x78515775)
}

func (c *Client) AccountUpdateProfile(params *AccountUpdateProfileParams) (User, error) {
	var resp User
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateStatusParams struct {
	Offline bool `validate:"required"`
}

func (e *AccountUpdateStatusParams) CRC() uint32 {
	return uint32(0x6628562c)
}

func (c *Client) AccountUpdateStatus(params *AccountUpdateStatusParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateThemeParams struct {
	// flags position
	Format   string              `validate:"required"`
	Theme    InputTheme          `validate:"required"`
	Slug     string              `flag:"0"`
	Title    string              `flag:"1"`
	Document InputDocument       `flag:"2"`
	Settings *InputThemeSettings `flag:"3"`
}

func (e *AccountUpdateThemeParams) CRC() uint32 {
	return uint32(0x5cb367d5)
}

func (c *Client) AccountUpdateTheme(params *AccountUpdateThemeParams) (Theme, error) {
	var resp Theme
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUpdateUsernameParams struct {
	Username string `validate:"required"`
}

func (e *AccountUpdateUsernameParams) CRC() uint32 {
	return uint32(0x3e0bdd7c)
}

func (c *Client) AccountUpdateUsername(params *AccountUpdateUsernameParams) (User, error) {
	var resp User
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUploadThemeParams struct {
	// flags position
	File     InputFile `validate:"required"`
	Thumb    InputFile `flag:"0"`
	FileName string    `validate:"required"`
	MimeType string    `validate:"required"`
}

func (e *AccountUploadThemeParams) CRC() uint32 {
	return uint32(0x1c3db333)
}

func (c *Client) AccountUploadTheme(params *AccountUploadThemeParams) (Document, error) {
	var resp Document
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountUploadWallPaperParams struct {
	File     InputFile          `validate:"required"`
	MimeType string             `validate:"required"`
	Settings *WallPaperSettings `validate:"required"`
}

func (e *AccountUploadWallPaperParams) CRC() uint32 {
	return uint32(0xdd853661)
}

func (c *Client) AccountUploadWallPaper(params *AccountUploadWallPaperParams) (WallPaper, error) {
	var resp WallPaper
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountVerifyEmailParams struct {
	Email string `validate:"required"`
	Code  string `validate:"required"`
}

func (e *AccountVerifyEmailParams) CRC() uint32 {
	return uint32(0xecba39db)
}

func (c *Client) AccountVerifyEmail(params *AccountVerifyEmailParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AccountVerifyPhoneParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
	PhoneCode     string `validate:"required"`
}

func (e *AccountVerifyPhoneParams) CRC() uint32 {
	return uint32(0x4dd3a7f6)
}

func (c *Client) AccountVerifyPhone(params *AccountVerifyPhoneParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthAcceptLoginTokenParams struct {
	Token []byte `validate:"required"`
}

func (e *AuthAcceptLoginTokenParams) CRC() uint32 {
	return uint32(0xe894ad4d)
}

func (c *Client) AuthAcceptLoginToken(params *AuthAcceptLoginTokenParams) (Authorization, error) {
	var resp Authorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthBindTempAuthKeyParams struct {
	PermAuthKeyId    int64  `validate:"required"`
	Nonce            int64  `validate:"required"`
	ExpiresAt        int32  `validate:"required"`
	EncryptedMessage []byte `validate:"required"`
}

func (e *AuthBindTempAuthKeyParams) CRC() uint32 {
	return uint32(0xcdd42a05)
}

func (c *Client) AuthBindTempAuthKey(params *AuthBindTempAuthKeyParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthCancelCodeParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
}

func (e *AuthCancelCodeParams) CRC() uint32 {
	return uint32(0x1f040578)
}

func (c *Client) AuthCancelCode(params *AuthCancelCodeParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthCheckPasswordParams struct {
	Password InputCheckPasswordSRP `validate:"required"`
}

func (e *AuthCheckPasswordParams) CRC() uint32 {
	return uint32(0xd18b4d16)
}

func (c *Client) AuthCheckPassword(params *AuthCheckPasswordParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthDropTempAuthKeysParams struct {
	ExceptAuthKeys []int64 `validate:"required"`
}

func (e *AuthDropTempAuthKeysParams) CRC() uint32 {
	return uint32(0x8e48a188)
}

func (c *Client) AuthDropTempAuthKeys(params *AuthDropTempAuthKeysParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthExportAuthorizationParams struct {
	DcId int32 `validate:"required"`
}

func (e *AuthExportAuthorizationParams) CRC() uint32 {
	return uint32(0xe5bfffcd)
}

func (c *Client) AuthExportAuthorization(params *AuthExportAuthorizationParams) (AuthExportedAuthorization, error) {
	var resp AuthExportedAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthExportLoginTokenParams struct {
	ApiId     int32   `validate:"required"`
	ApiHash   string  `validate:"required"`
	ExceptIds []int32 `validate:"required"`
}

func (e *AuthExportLoginTokenParams) CRC() uint32 {
	return uint32(0xb1b41517)
}

func (c *Client) AuthExportLoginToken(params *AuthExportLoginTokenParams) (AuthLoginToken, error) {
	var resp AuthLoginToken
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthImportAuthorizationParams struct {
	Id    int32  `validate:"required"`
	Bytes []byte `validate:"required"`
}

func (e *AuthImportAuthorizationParams) CRC() uint32 {
	return uint32(0xe3ef9613)
}

func (c *Client) AuthImportAuthorization(params *AuthImportAuthorizationParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthImportBotAuthorizationParams struct {
	Flags        int32  `validate:"required"`
	ApiId        int32  `validate:"required"`
	ApiHash      string `validate:"required"`
	BotAuthToken string `validate:"required"`
}

func (e *AuthImportBotAuthorizationParams) CRC() uint32 {
	return uint32(0x67a3ff2c)
}

func (c *Client) AuthImportBotAuthorization(params *AuthImportBotAuthorizationParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthImportLoginTokenParams struct {
	Token []byte `validate:"required"`
}

func (e *AuthImportLoginTokenParams) CRC() uint32 {
	return uint32(0x95ac5ce4)
}

func (c *Client) AuthImportLoginToken(params *AuthImportLoginTokenParams) (AuthLoginToken, error) {
	var resp AuthLoginToken
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthLogOutParams struct{}

func (e *AuthLogOutParams) CRC() uint32 {
	return uint32(0x5717da40)
}

func (c *Client) AuthLogOut() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AuthLogOutParams{}, &resp)
	return resp, err
}

type AuthRecoverPasswordParams struct {
	Code string `validate:"required"`
}

func (e *AuthRecoverPasswordParams) CRC() uint32 {
	return uint32(0x4ea56e92)
}

func (c *Client) AuthRecoverPassword(params *AuthRecoverPasswordParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthRequestPasswordRecoveryParams struct{}

func (e *AuthRequestPasswordRecoveryParams) CRC() uint32 {
	return uint32(0xd897bc66)
}

func (c *Client) AuthRequestPasswordRecovery() (AuthPasswordRecovery, error) {
	var resp AuthPasswordRecovery
	err := c.MakeRequest2(&AuthRequestPasswordRecoveryParams{}, &resp)
	return resp, err
}

type AuthResendCodeParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
}

func (e *AuthResendCodeParams) CRC() uint32 {
	return uint32(0x3ef1a9bf)
}

func (c *Client) AuthResendCode(params *AuthResendCodeParams) (AuthSentCode, error) {
	var resp AuthSentCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthResetAuthorizationsParams struct{}

func (e *AuthResetAuthorizationsParams) CRC() uint32 {
	return uint32(0x9fab0d1a)
}

func (c *Client) AuthResetAuthorizations() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&AuthResetAuthorizationsParams{}, &resp)
	return resp, err
}

type AuthSendCodeParams struct {
	PhoneNumber string        `validate:"required"`
	ApiId       int32         `validate:"required"`
	ApiHash     string        `validate:"required"`
	Settings    *CodeSettings `validate:"required"`
}

func (e *AuthSendCodeParams) CRC() uint32 {
	return uint32(0xa677244f)
}

func (c *Client) AuthSendCode(params *AuthSendCodeParams) (AuthSentCode, error) {
	var resp AuthSentCode
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthSignInParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
	PhoneCode     string `validate:"required"`
}

func (e *AuthSignInParams) CRC() uint32 {
	return uint32(0xbcd51581)
}

func (c *Client) AuthSignIn(params *AuthSignInParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type AuthSignUpParams struct {
	PhoneNumber   string `validate:"required"`
	PhoneCodeHash string `validate:"required"`
	FirstName     string `validate:"required"`
	LastName      string `validate:"required"`
}

func (e *AuthSignUpParams) CRC() uint32 {
	return uint32(0x80eee427)
}

func (c *Client) AuthSignUp(params *AuthSignUpParams) (AuthAuthorization, error) {
	var resp AuthAuthorization
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type BotsAnswerWebhookJSONQueryParams struct {
	QueryId int64     `validate:"required"`
	Data    *DataJSON `validate:"required"`
}

func (e *BotsAnswerWebhookJSONQueryParams) CRC() uint32 {
	return uint32(0xe6213f4d)
}

func (c *Client) BotsAnswerWebhookJSONQuery(params *BotsAnswerWebhookJSONQueryParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type BotsSendCustomRequestParams struct {
	CustomMethod string    `validate:"required"`
	Params       *DataJSON `validate:"required"`
}

func (e *BotsSendCustomRequestParams) CRC() uint32 {
	return uint32(0xaa2769ed)
}

func (c *Client) BotsSendCustomRequest(params *BotsSendCustomRequestParams) (DataJSON, error) {
	var resp DataJSON
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type BotsSetBotCommandsParams struct {
	Commands []*BotCommand `validate:"required"`
}

func (e *BotsSetBotCommandsParams) CRC() uint32 {
	return uint32(0x805d46f6)
}

func (c *Client) BotsSetBotCommands(params *BotsSetBotCommandsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsCheckUsernameParams struct {
	Channel  InputChannel `validate:"required"`
	Username string       `validate:"required"`
}

func (e *ChannelsCheckUsernameParams) CRC() uint32 {
	return uint32(0x10e6bd2c)
}

func (c *Client) ChannelsCheckUsername(params *ChannelsCheckUsernameParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsCreateChannelParams struct {
	// flags position
	Broadcast bool          `flag:"0,encoded_in_bitflags"`
	Megagroup bool          `flag:"1,encoded_in_bitflags"`
	Title     string        `validate:"required"`
	About     string        `validate:"required"`
	GeoPoint  InputGeoPoint `flag:"2"`
	Address   string        `flag:"2"`
}

func (e *ChannelsCreateChannelParams) CRC() uint32 {
	return uint32(0x3d5fb10f)
}

func (c *Client) ChannelsCreateChannel(params *ChannelsCreateChannelParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsDeleteChannelParams struct {
	Channel InputChannel `validate:"required"`
}

func (e *ChannelsDeleteChannelParams) CRC() uint32 {
	return uint32(0xc0111fe3)
}

func (c *Client) ChannelsDeleteChannel(params *ChannelsDeleteChannelParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsDeleteHistoryParams struct {
	Channel InputChannel `validate:"required"`
	MaxId   int32        `validate:"required"`
}

func (e *ChannelsDeleteHistoryParams) CRC() uint32 {
	return uint32(0xaf369d42)
}

func (c *Client) ChannelsDeleteHistory(params *ChannelsDeleteHistoryParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsDeleteMessagesParams struct {
	Channel InputChannel `validate:"required"`
	Id      []int32      `validate:"required"`
}

func (e *ChannelsDeleteMessagesParams) CRC() uint32 {
	return uint32(0x84c1fd4e)
}

func (c *Client) ChannelsDeleteMessages(params *ChannelsDeleteMessagesParams) (MessagesAffectedMessages, error) {
	var resp MessagesAffectedMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsDeleteUserHistoryParams struct {
	Channel InputChannel `validate:"required"`
	UserId  InputUser    `validate:"required"`
}

func (e *ChannelsDeleteUserHistoryParams) CRC() uint32 {
	return uint32(0xd10dd71b)
}

func (c *Client) ChannelsDeleteUserHistory(params *ChannelsDeleteUserHistoryParams) (MessagesAffectedHistory, error) {
	var resp MessagesAffectedHistory
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditAdminParams struct {
	Channel     InputChannel     `validate:"required"`
	UserId      InputUser        `validate:"required"`
	AdminRights *ChatAdminRights `validate:"required"`
	Rank        string           `validate:"required"`
}

func (e *ChannelsEditAdminParams) CRC() uint32 {
	return uint32(0xd33c8902)
}

func (c *Client) ChannelsEditAdmin(params *ChannelsEditAdminParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditBannedParams struct {
	Channel      InputChannel      `validate:"required"`
	UserId       InputUser         `validate:"required"`
	BannedRights *ChatBannedRights `validate:"required"`
}

func (e *ChannelsEditBannedParams) CRC() uint32 {
	return uint32(0x72796912)
}

func (c *Client) ChannelsEditBanned(params *ChannelsEditBannedParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditCreatorParams struct {
	Channel  InputChannel          `validate:"required"`
	UserId   InputUser             `validate:"required"`
	Password InputCheckPasswordSRP `validate:"required"`
}

func (e *ChannelsEditCreatorParams) CRC() uint32 {
	return uint32(0x8f38cd1f)
}

func (c *Client) ChannelsEditCreator(params *ChannelsEditCreatorParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditLocationParams struct {
	Channel  InputChannel  `validate:"required"`
	GeoPoint InputGeoPoint `validate:"required"`
	Address  string        `validate:"required"`
}

func (e *ChannelsEditLocationParams) CRC() uint32 {
	return uint32(0x58e63f6d)
}

func (c *Client) ChannelsEditLocation(params *ChannelsEditLocationParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditPhotoParams struct {
	Channel InputChannel   `validate:"required"`
	Photo   InputChatPhoto `validate:"required"`
}

func (e *ChannelsEditPhotoParams) CRC() uint32 {
	return uint32(0xf12e57c9)
}

func (c *Client) ChannelsEditPhoto(params *ChannelsEditPhotoParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsEditTitleParams struct {
	Channel InputChannel `validate:"required"`
	Title   string       `validate:"required"`
}

func (e *ChannelsEditTitleParams) CRC() uint32 {
	return uint32(0x566decd0)
}

func (c *Client) ChannelsEditTitle(params *ChannelsEditTitleParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsExportMessageLinkParams struct {
	Channel InputChannel `validate:"required"`
	Id      int32        `validate:"required"`
	Grouped bool         `validate:"required"`
}

func (e *ChannelsExportMessageLinkParams) CRC() uint32 {
	return uint32(0xceb77163)
}

func (c *Client) ChannelsExportMessageLink(params *ChannelsExportMessageLinkParams) (ExportedMessageLink, error) {
	var resp ExportedMessageLink
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetAdminLogParams struct {
	// flags position
	Channel      InputChannel                 `validate:"required"`
	Q            string                       `validate:"required"`
	EventsFilter *ChannelAdminLogEventsFilter `flag:"0"`
	Admins       []InputUser                  `flag:"1"`
	MaxId        int64                        `validate:"required"`
	MinId        int64                        `validate:"required"`
	Limit        int32                        `validate:"required"`
}

func (e *ChannelsGetAdminLogParams) CRC() uint32 {
	return uint32(0x33ddf480)
}

func (c *Client) ChannelsGetAdminLog(params *ChannelsGetAdminLogParams) (ChannelsAdminLogResults, error) {
	var resp ChannelsAdminLogResults
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetAdminedPublicChannelsParams struct {
	// flags position
	ByLocation bool `flag:"0,encoded_in_bitflags"`
	CheckLimit bool `flag:"1,encoded_in_bitflags"`
}

func (e *ChannelsGetAdminedPublicChannelsParams) CRC() uint32 {
	return uint32(0xf8b036af)
}

func (c *Client) ChannelsGetAdminedPublicChannels(params *ChannelsGetAdminedPublicChannelsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetChannelsParams struct {
	Id []InputChannel `validate:"required"`
}

func (e *ChannelsGetChannelsParams) CRC() uint32 {
	return uint32(0xa7f6bbb)
}

func (c *Client) ChannelsGetChannels(params *ChannelsGetChannelsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetFullChannelParams struct {
	Channel InputChannel `validate:"required"`
}

func (e *ChannelsGetFullChannelParams) CRC() uint32 {
	return uint32(0x8736a09)
}

func (c *Client) ChannelsGetFullChannel(params *ChannelsGetFullChannelParams) (MessagesChatFull, error) {
	var resp MessagesChatFull
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetGroupsForDiscussionParams struct{}

func (e *ChannelsGetGroupsForDiscussionParams) CRC() uint32 {
	return uint32(0xf5dad378)
}

func (c *Client) ChannelsGetGroupsForDiscussion() (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(&ChannelsGetGroupsForDiscussionParams{}, &resp)
	return resp, err
}

type ChannelsGetInactiveChannelsParams struct{}

func (e *ChannelsGetInactiveChannelsParams) CRC() uint32 {
	return uint32(0x11e831ee)
}

func (c *Client) ChannelsGetInactiveChannels() (MessagesInactiveChats, error) {
	var resp MessagesInactiveChats
	err := c.MakeRequest2(&ChannelsGetInactiveChannelsParams{}, &resp)
	return resp, err
}

type ChannelsGetLeftChannelsParams struct {
	Offset int32 `validate:"required"`
}

func (e *ChannelsGetLeftChannelsParams) CRC() uint32 {
	return uint32(0x8341ecc0)
}

func (c *Client) ChannelsGetLeftChannels(params *ChannelsGetLeftChannelsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetMessagesParams struct {
	Channel InputChannel   `validate:"required"`
	Id      []InputMessage `validate:"required"`
}

func (e *ChannelsGetMessagesParams) CRC() uint32 {
	return uint32(0xad8c9a23)
}

func (c *Client) ChannelsGetMessages(params *ChannelsGetMessagesParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetParticipantParams struct {
	Channel InputChannel `validate:"required"`
	UserId  InputUser    `validate:"required"`
}

func (e *ChannelsGetParticipantParams) CRC() uint32 {
	return uint32(0x546dd7a6)
}

func (c *Client) ChannelsGetParticipant(params *ChannelsGetParticipantParams) (ChannelsChannelParticipant, error) {
	var resp ChannelsChannelParticipant
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsGetParticipantsParams struct {
	Channel InputChannel              `validate:"required"`
	Filter  ChannelParticipantsFilter `validate:"required"`
	Offset  int32                     `validate:"required"`
	Limit   int32                     `validate:"required"`
	Hash    int32                     `validate:"required"`
}

func (e *ChannelsGetParticipantsParams) CRC() uint32 {
	return uint32(0x123e05e9)
}

func (c *Client) ChannelsGetParticipants(params *ChannelsGetParticipantsParams) (ChannelsChannelParticipants, error) {
	var resp ChannelsChannelParticipants
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsInviteToChannelParams struct {
	Channel InputChannel `validate:"required"`
	Users   []InputUser  `validate:"required"`
}

func (e *ChannelsInviteToChannelParams) CRC() uint32 {
	return uint32(0x199f3a6c)
}

func (c *Client) ChannelsInviteToChannel(params *ChannelsInviteToChannelParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsJoinChannelParams struct {
	Channel InputChannel `validate:"required"`
}

func (e *ChannelsJoinChannelParams) CRC() uint32 {
	return uint32(0x24b524c5)
}

func (c *Client) ChannelsJoinChannel(params *ChannelsJoinChannelParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsLeaveChannelParams struct {
	Channel InputChannel `validate:"required"`
}

func (e *ChannelsLeaveChannelParams) CRC() uint32 {
	return uint32(0xf836aa95)
}

func (c *Client) ChannelsLeaveChannel(params *ChannelsLeaveChannelParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsReadHistoryParams struct {
	Channel InputChannel `validate:"required"`
	MaxId   int32        `validate:"required"`
}

func (e *ChannelsReadHistoryParams) CRC() uint32 {
	return uint32(0xcc104937)
}

func (c *Client) ChannelsReadHistory(params *ChannelsReadHistoryParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsReadMessageContentsParams struct {
	Channel InputChannel `validate:"required"`
	Id      []int32      `validate:"required"`
}

func (e *ChannelsReadMessageContentsParams) CRC() uint32 {
	return uint32(0xeab5dc38)
}

func (c *Client) ChannelsReadMessageContents(params *ChannelsReadMessageContentsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsReportSpamParams struct {
	Channel InputChannel `validate:"required"`
	UserId  InputUser    `validate:"required"`
	Id      []int32      `validate:"required"`
}

func (e *ChannelsReportSpamParams) CRC() uint32 {
	return uint32(0xfe087810)
}

func (c *Client) ChannelsReportSpam(params *ChannelsReportSpamParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsSetDiscussionGroupParams struct {
	Broadcast InputChannel `validate:"required"`
	Group     InputChannel `validate:"required"`
}

func (e *ChannelsSetDiscussionGroupParams) CRC() uint32 {
	return uint32(0x40582bb2)
}

func (c *Client) ChannelsSetDiscussionGroup(params *ChannelsSetDiscussionGroupParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsSetStickersParams struct {
	Channel    InputChannel    `validate:"required"`
	Stickerset InputStickerSet `validate:"required"`
}

func (e *ChannelsSetStickersParams) CRC() uint32 {
	return uint32(0xea8ca4f9)
}

func (c *Client) ChannelsSetStickers(params *ChannelsSetStickersParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsTogglePreHistoryHiddenParams struct {
	Channel InputChannel `validate:"required"`
	Enabled bool         `validate:"required"`
}

func (e *ChannelsTogglePreHistoryHiddenParams) CRC() uint32 {
	return uint32(0xeabbb94c)
}

func (c *Client) ChannelsTogglePreHistoryHidden(params *ChannelsTogglePreHistoryHiddenParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsToggleSignaturesParams struct {
	Channel InputChannel `validate:"required"`
	Enabled bool         `validate:"required"`
}

func (e *ChannelsToggleSignaturesParams) CRC() uint32 {
	return uint32(0x1f69b606)
}

func (c *Client) ChannelsToggleSignatures(params *ChannelsToggleSignaturesParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsToggleSlowModeParams struct {
	Channel InputChannel `validate:"required"`
	Seconds int32        `validate:"required"`
}

func (e *ChannelsToggleSlowModeParams) CRC() uint32 {
	return uint32(0xedd49ef0)
}

func (c *Client) ChannelsToggleSlowMode(params *ChannelsToggleSlowModeParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ChannelsUpdateUsernameParams struct {
	Channel  InputChannel `validate:"required"`
	Username string       `validate:"required"`
}

func (e *ChannelsUpdateUsernameParams) CRC() uint32 {
	return uint32(0x3514b3de)
}

func (c *Client) ChannelsUpdateUsername(params *ChannelsUpdateUsernameParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsAcceptContactParams struct {
	Id InputUser `validate:"required"`
}

func (e *ContactsAcceptContactParams) CRC() uint32 {
	return uint32(0xf831a20f)
}

func (c *Client) ContactsAcceptContact(params *ContactsAcceptContactParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsAddContactParams struct {
	// flags position
	AddPhonePrivacyException bool      `flag:"0,encoded_in_bitflags"`
	Id                       InputUser `validate:"required"`
	FirstName                string    `validate:"required"`
	LastName                 string    `validate:"required"`
	Phone                    string    `validate:"required"`
}

func (e *ContactsAddContactParams) CRC() uint32 {
	return uint32(0xe8f463d0)
}

func (c *Client) ContactsAddContact(params *ContactsAddContactParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsBlockParams struct {
	Id InputUser `validate:"required"`
}

func (e *ContactsBlockParams) CRC() uint32 {
	return uint32(0x332b49fc)
}

func (c *Client) ContactsBlock(params *ContactsBlockParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsDeleteByPhonesParams struct {
	Phones []string `validate:"required"`
}

func (e *ContactsDeleteByPhonesParams) CRC() uint32 {
	return uint32(0x1013fd9e)
}

func (c *Client) ContactsDeleteByPhones(params *ContactsDeleteByPhonesParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsDeleteContactsParams struct {
	Id []InputUser `validate:"required"`
}

func (e *ContactsDeleteContactsParams) CRC() uint32 {
	return uint32(0x96a0e00)
}

func (c *Client) ContactsDeleteContacts(params *ContactsDeleteContactsParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsGetBlockedParams struct {
	Offset int32 `validate:"required"`
	Limit  int32 `validate:"required"`
}

func (e *ContactsGetBlockedParams) CRC() uint32 {
	return uint32(0xf57c350f)
}

func (c *Client) ContactsGetBlocked(params *ContactsGetBlockedParams) (ContactsBlocked, error) {
	var resp ContactsBlocked
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsGetContactIDsParams struct {
	Hash int32 `validate:"required"`
}

func (e *ContactsGetContactIDsParams) CRC() uint32 {
	return uint32(0x2caa4a42)
}

func (c *Client) ContactsGetContactIDs(params *ContactsGetContactIDsParams) (serialize.Int, error) {
	var resp serialize.Int
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsGetContactsParams struct {
	Hash int32 `validate:"required"`
}

func (e *ContactsGetContactsParams) CRC() uint32 {
	return uint32(0xc023849f)
}

func (c *Client) ContactsGetContacts(params *ContactsGetContactsParams) (ContactsContacts, error) {
	var resp ContactsContacts
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsGetLocatedParams struct {
	// flags position
	Background  bool          `flag:"1,encoded_in_bitflags"`
	GeoPoint    InputGeoPoint `validate:"required"`
	SelfExpires int32         `flag:"0"`
}

func (e *ContactsGetLocatedParams) CRC() uint32 {
	return uint32(0xd348bc44)
}

func (c *Client) ContactsGetLocated(params *ContactsGetLocatedParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsGetSavedParams struct{}

func (e *ContactsGetSavedParams) CRC() uint32 {
	return uint32(0x82f1e39f)
}

func (c *Client) ContactsGetSaved() (SavedContact, error) {
	var resp SavedContact
	err := c.MakeRequest2(&ContactsGetSavedParams{}, &resp)
	return resp, err
}

type ContactsGetStatusesParams struct{}

func (e *ContactsGetStatusesParams) CRC() uint32 {
	return uint32(0xc4a353ee)
}

func (c *Client) ContactsGetStatuses() (ContactStatus, error) {
	var resp ContactStatus
	err := c.MakeRequest2(&ContactsGetStatusesParams{}, &resp)
	return resp, err
}

type ContactsGetTopPeersParams struct {
	// flags position
	Correspondents bool  `flag:"0,encoded_in_bitflags"`
	BotsPm         bool  `flag:"1,encoded_in_bitflags"`
	BotsInline     bool  `flag:"2,encoded_in_bitflags"`
	PhoneCalls     bool  `flag:"3,encoded_in_bitflags"`
	ForwardUsers   bool  `flag:"4,encoded_in_bitflags"`
	ForwardChats   bool  `flag:"5,encoded_in_bitflags"`
	Groups         bool  `flag:"10,encoded_in_bitflags"`
	Channels       bool  `flag:"15,encoded_in_bitflags"`
	Offset         int32 `validate:"required"`
	Limit          int32 `validate:"required"`
	Hash           int32 `validate:"required"`
}

func (e *ContactsGetTopPeersParams) CRC() uint32 {
	return uint32(0xd4982db5)
}

func (c *Client) ContactsGetTopPeers(params *ContactsGetTopPeersParams) (ContactsTopPeers, error) {
	var resp ContactsTopPeers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsImportContactsParams struct {
	Contacts []*InputContact `validate:"required"`
}

func (e *ContactsImportContactsParams) CRC() uint32 {
	return uint32(0x2c800be5)
}

func (c *Client) ContactsImportContacts(params *ContactsImportContactsParams) (ContactsImportedContacts, error) {
	var resp ContactsImportedContacts
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsResetSavedParams struct{}

func (e *ContactsResetSavedParams) CRC() uint32 {
	return uint32(0x879537f1)
}

func (c *Client) ContactsResetSaved() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&ContactsResetSavedParams{}, &resp)
	return resp, err
}

type ContactsResetTopPeerRatingParams struct {
	Category TopPeerCategory `validate:"required"`
	Peer     InputPeer       `validate:"required"`
}

func (e *ContactsResetTopPeerRatingParams) CRC() uint32 {
	return uint32(0x1ae373ac)
}

func (c *Client) ContactsResetTopPeerRating(params *ContactsResetTopPeerRatingParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsResolveUsernameParams struct {
	Username string `validate:"required"`
}

func (e *ContactsResolveUsernameParams) CRC() uint32 {
	return uint32(0xf93ccba3)
}

func (c *Client) ContactsResolveUsername(params *ContactsResolveUsernameParams) (ContactsResolvedPeer, error) {
	var resp ContactsResolvedPeer
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsSearchParams struct {
	Q     string `validate:"required"`
	Limit int32  `validate:"required"`
}

func (e *ContactsSearchParams) CRC() uint32 {
	return uint32(0x11f812d8)
}

func (c *Client) ContactsSearch(params *ContactsSearchParams) (ContactsFound, error) {
	var resp ContactsFound
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsToggleTopPeersParams struct {
	Enabled bool `validate:"required"`
}

func (e *ContactsToggleTopPeersParams) CRC() uint32 {
	return uint32(0x8514bdda)
}

func (c *Client) ContactsToggleTopPeers(params *ContactsToggleTopPeersParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type ContactsUnblockParams struct {
	Id InputUser `validate:"required"`
}

func (e *ContactsUnblockParams) CRC() uint32 {
	return uint32(0xe54100bd)
}

func (c *Client) ContactsUnblock(params *ContactsUnblockParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type FoldersDeleteFolderParams struct {
	FolderId int32 `validate:"required"`
}

func (e *FoldersDeleteFolderParams) CRC() uint32 {
	return uint32(0x1c295881)
}

func (c *Client) FoldersDeleteFolder(params *FoldersDeleteFolderParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type FoldersEditPeerFoldersParams struct {
	FolderPeers []*InputFolderPeer `validate:"required"`
}

func (e *FoldersEditPeerFoldersParams) CRC() uint32 {
	return uint32(0x6847d0ab)
}

func (c *Client) FoldersEditPeerFolders(params *FoldersEditPeerFoldersParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpAcceptTermsOfServiceParams struct {
	Id *DataJSON `validate:"required"`
}

func (e *HelpAcceptTermsOfServiceParams) CRC() uint32 {
	return uint32(0xee72f79a)
}

func (c *Client) HelpAcceptTermsOfService(params *HelpAcceptTermsOfServiceParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpDismissSuggestionParams struct {
	Suggestion string `validate:"required"`
}

func (e *HelpDismissSuggestionParams) CRC() uint32 {
	return uint32(0x77fa99f)
}

func (c *Client) HelpDismissSuggestion(params *HelpDismissSuggestionParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpEditUserInfoParams struct {
	UserId   InputUser       `validate:"required"`
	Message  string          `validate:"required"`
	Entities []MessageEntity `validate:"required"`
}

func (e *HelpEditUserInfoParams) CRC() uint32 {
	return uint32(0x66b91b70)
}

func (c *Client) HelpEditUserInfo(params *HelpEditUserInfoParams) (HelpUserInfo, error) {
	var resp HelpUserInfo
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetAppChangelogParams struct {
	PrevAppVersion string `validate:"required"`
}

func (e *HelpGetAppChangelogParams) CRC() uint32 {
	return uint32(0x9010ef6f)
}

func (c *Client) HelpGetAppChangelog(params *HelpGetAppChangelogParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetAppConfigParams struct{}

func (e *HelpGetAppConfigParams) CRC() uint32 {
	return uint32(0x98914110)
}

func (c *Client) HelpGetAppConfig() (JSONValue, error) {
	var resp JSONValue
	err := c.MakeRequest2(&HelpGetAppConfigParams{}, &resp)
	return resp, err
}

type HelpGetAppUpdateParams struct {
	Source string `validate:"required"`
}

func (e *HelpGetAppUpdateParams) CRC() uint32 {
	return uint32(0x522d5a7d)
}

func (c *Client) HelpGetAppUpdate(params *HelpGetAppUpdateParams) (HelpAppUpdate, error) {
	var resp HelpAppUpdate
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetCdnConfigParams struct{}

func (e *HelpGetCdnConfigParams) CRC() uint32 {
	return uint32(0x52029342)
}

func (c *Client) HelpGetCdnConfig() (CdnConfig, error) {
	var resp CdnConfig
	err := c.MakeRequest2(&HelpGetCdnConfigParams{}, &resp)
	return resp, err
}

type HelpGetConfigParams struct{}

func (e *HelpGetConfigParams) CRC() uint32 {
	return uint32(0xc4f9186b)
}

func (c *Client) HelpGetConfig() (Config, error) {
	var resp Config
	err := c.MakeRequest2(&HelpGetConfigParams{}, &resp)
	return resp, err
}

type HelpGetDeepLinkInfoParams struct {
	Path string `validate:"required"`
}

func (e *HelpGetDeepLinkInfoParams) CRC() uint32 {
	return uint32(0x3fedc75f)
}

func (c *Client) HelpGetDeepLinkInfo(params *HelpGetDeepLinkInfoParams) (HelpDeepLinkInfo, error) {
	var resp HelpDeepLinkInfo
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetInviteTextParams struct{}

func (e *HelpGetInviteTextParams) CRC() uint32 {
	return uint32(0x4d392343)
}

func (c *Client) HelpGetInviteText() (HelpInviteText, error) {
	var resp HelpInviteText
	err := c.MakeRequest2(&HelpGetInviteTextParams{}, &resp)
	return resp, err
}

type HelpGetNearestDcParams struct{}

func (e *HelpGetNearestDcParams) CRC() uint32 {
	return uint32(0x1fb33026)
}

func (c *Client) HelpGetNearestDc() (NearestDc, error) {
	var resp NearestDc
	err := c.MakeRequest2(&HelpGetNearestDcParams{}, &resp)
	return resp, err
}

type HelpGetPassportConfigParams struct {
	Hash int32 `validate:"required"`
}

func (e *HelpGetPassportConfigParams) CRC() uint32 {
	return uint32(0xc661ad08)
}

func (c *Client) HelpGetPassportConfig(params *HelpGetPassportConfigParams) (HelpPassportConfig, error) {
	var resp HelpPassportConfig
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetPromoDataParams struct{}

func (e *HelpGetPromoDataParams) CRC() uint32 {
	return uint32(0xc0977421)
}

func (c *Client) HelpGetPromoData() (HelpPromoData, error) {
	var resp HelpPromoData
	err := c.MakeRequest2(&HelpGetPromoDataParams{}, &resp)
	return resp, err
}

type HelpGetRecentMeUrlsParams struct {
	Referer string `validate:"required"`
}

func (e *HelpGetRecentMeUrlsParams) CRC() uint32 {
	return uint32(0x3dc0f114)
}

func (c *Client) HelpGetRecentMeUrls(params *HelpGetRecentMeUrlsParams) (HelpRecentMeUrls, error) {
	var resp HelpRecentMeUrls
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpGetSupportParams struct{}

func (e *HelpGetSupportParams) CRC() uint32 {
	return uint32(0x9cdf08cd)
}

func (c *Client) HelpGetSupport() (HelpSupport, error) {
	var resp HelpSupport
	err := c.MakeRequest2(&HelpGetSupportParams{}, &resp)
	return resp, err
}

type HelpGetSupportNameParams struct{}

func (e *HelpGetSupportNameParams) CRC() uint32 {
	return uint32(0xd360e72c)
}

func (c *Client) HelpGetSupportName() (HelpSupportName, error) {
	var resp HelpSupportName
	err := c.MakeRequest2(&HelpGetSupportNameParams{}, &resp)
	return resp, err
}

type HelpGetTermsOfServiceUpdateParams struct{}

func (e *HelpGetTermsOfServiceUpdateParams) CRC() uint32 {
	return uint32(0x2ca51fd1)
}

func (c *Client) HelpGetTermsOfServiceUpdate() (HelpTermsOfServiceUpdate, error) {
	var resp HelpTermsOfServiceUpdate
	err := c.MakeRequest2(&HelpGetTermsOfServiceUpdateParams{}, &resp)
	return resp, err
}

type HelpGetUserInfoParams struct {
	UserId InputUser `validate:"required"`
}

func (e *HelpGetUserInfoParams) CRC() uint32 {
	return uint32(0x38a08d3)
}

func (c *Client) HelpGetUserInfo(params *HelpGetUserInfoParams) (HelpUserInfo, error) {
	var resp HelpUserInfo
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpHidePromoDataParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *HelpHidePromoDataParams) CRC() uint32 {
	return uint32(0x1e251c95)
}

func (c *Client) HelpHidePromoData(params *HelpHidePromoDataParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpSaveAppLogParams struct {
	Events []*InputAppEvent `validate:"required"`
}

func (e *HelpSaveAppLogParams) CRC() uint32 {
	return uint32(0x6f02f748)
}

func (c *Client) HelpSaveAppLog(params *HelpSaveAppLogParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type HelpSetBotUpdatesStatusParams struct {
	PendingUpdatesCount int32  `validate:"required"`
	Message             string `validate:"required"`
}

func (e *HelpSetBotUpdatesStatusParams) CRC() uint32 {
	return uint32(0xec22cfcd)
}

func (c *Client) HelpSetBotUpdatesStatus(params *HelpSetBotUpdatesStatusParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type LangpackGetDifferenceParams struct {
	LangPack    string `validate:"required"`
	LangCode    string `validate:"required"`
	FromVersion int32  `validate:"required"`
}

func (e *LangpackGetDifferenceParams) CRC() uint32 {
	return uint32(0xcd984aa5)
}

func (c *Client) LangpackGetDifference(params *LangpackGetDifferenceParams) (LangPackDifference, error) {
	var resp LangPackDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type LangpackGetLangPackParams struct {
	LangPack string `validate:"required"`
	LangCode string `validate:"required"`
}

func (e *LangpackGetLangPackParams) CRC() uint32 {
	return uint32(0xf2f2330a)
}

func (c *Client) LangpackGetLangPack(params *LangpackGetLangPackParams) (LangPackDifference, error) {
	var resp LangPackDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type LangpackGetLanguageParams struct {
	LangPack string `validate:"required"`
	LangCode string `validate:"required"`
}

func (e *LangpackGetLanguageParams) CRC() uint32 {
	return uint32(0x6a596502)
}

func (c *Client) LangpackGetLanguage(params *LangpackGetLanguageParams) (LangPackLanguage, error) {
	var resp LangPackLanguage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type LangpackGetLanguagesParams struct {
	LangPack string `validate:"required"`
}

func (e *LangpackGetLanguagesParams) CRC() uint32 {
	return uint32(0x42c6978f)
}

func (c *Client) LangpackGetLanguages(params *LangpackGetLanguagesParams) (LangPackLanguage, error) {
	var resp LangPackLanguage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type LangpackGetStringsParams struct {
	LangPack string   `validate:"required"`
	LangCode string   `validate:"required"`
	Keys     []string `validate:"required"`
}

func (e *LangpackGetStringsParams) CRC() uint32 {
	return uint32(0xefea3803)
}

func (c *Client) LangpackGetStrings(params *LangpackGetStringsParams) (LangPackString, error) {
	var resp LangPackString
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesAcceptEncryptionParams struct {
	Peer           *InputEncryptedChat `validate:"required"`
	GB             []byte              `validate:"required"`
	KeyFingerprint int64               `validate:"required"`
}

func (e *MessagesAcceptEncryptionParams) CRC() uint32 {
	return uint32(0x3dbc0415)
}

func (c *Client) MessagesAcceptEncryption(params *MessagesAcceptEncryptionParams) (EncryptedChat, error) {
	var resp EncryptedChat
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesAcceptUrlAuthParams struct {
	// flags position
	WriteAllowed bool      `flag:"0,encoded_in_bitflags"`
	Peer         InputPeer `validate:"required"`
	MsgId        int32     `validate:"required"`
	ButtonId     int32     `validate:"required"`
}

func (e *MessagesAcceptUrlAuthParams) CRC() uint32 {
	return uint32(0xf729ea98)
}

func (c *Client) MessagesAcceptUrlAuth(params *MessagesAcceptUrlAuthParams) (UrlAuthResult, error) {
	var resp UrlAuthResult
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesAddChatUserParams struct {
	ChatId   int32     `validate:"required"`
	UserId   InputUser `validate:"required"`
	FwdLimit int32     `validate:"required"`
}

func (e *MessagesAddChatUserParams) CRC() uint32 {
	return uint32(0xf9a0aa09)
}

func (c *Client) MessagesAddChatUser(params *MessagesAddChatUserParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesCheckChatInviteParams struct {
	Hash string `validate:"required"`
}

func (e *MessagesCheckChatInviteParams) CRC() uint32 {
	return uint32(0x3eadb1bb)
}

func (c *Client) MessagesCheckChatInvite(params *MessagesCheckChatInviteParams) (ChatInvite, error) {
	var resp ChatInvite
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesClearAllDraftsParams struct{}

func (e *MessagesClearAllDraftsParams) CRC() uint32 {
	return uint32(0x7e58ee9c)
}

func (c *Client) MessagesClearAllDrafts() (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(&MessagesClearAllDraftsParams{}, &resp)
	return resp, err
}

type MessagesClearRecentStickersParams struct {
	// flags position
	Attached bool `flag:"0,encoded_in_bitflags"`
}

func (e *MessagesClearRecentStickersParams) CRC() uint32 {
	return uint32(0x8999602d)
}

func (c *Client) MessagesClearRecentStickers(params *MessagesClearRecentStickersParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesCreateChatParams struct {
	Users []InputUser `validate:"required"`
	Title string      `validate:"required"`
}

func (e *MessagesCreateChatParams) CRC() uint32 {
	return uint32(0x9cb126e)
}

func (c *Client) MessagesCreateChat(params *MessagesCreateChatParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesDeleteChatUserParams struct {
	ChatId int32     `validate:"required"`
	UserId InputUser `validate:"required"`
}

func (e *MessagesDeleteChatUserParams) CRC() uint32 {
	return uint32(0xe0611f16)
}

func (c *Client) MessagesDeleteChatUser(params *MessagesDeleteChatUserParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesDeleteHistoryParams struct {
	// flags position
	JustClear bool      `flag:"0,encoded_in_bitflags"`
	Revoke    bool      `flag:"1,encoded_in_bitflags"`
	Peer      InputPeer `validate:"required"`
	MaxId     int32     `validate:"required"`
}

func (e *MessagesDeleteHistoryParams) CRC() uint32 {
	return uint32(0x1c015b09)
}

func (c *Client) MessagesDeleteHistory(params *MessagesDeleteHistoryParams) (MessagesAffectedHistory, error) {
	var resp MessagesAffectedHistory
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesDeleteMessagesParams struct {
	// flags position
	Revoke bool    `flag:"0,encoded_in_bitflags"`
	Id     []int32 `validate:"required"`
}

func (e *MessagesDeleteMessagesParams) CRC() uint32 {
	return uint32(0xe58e95d2)
}

func (c *Client) MessagesDeleteMessages(params *MessagesDeleteMessagesParams) (MessagesAffectedMessages, error) {
	var resp MessagesAffectedMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesDeleteScheduledMessagesParams struct {
	Peer InputPeer `validate:"required"`
	Id   []int32   `validate:"required"`
}

func (e *MessagesDeleteScheduledMessagesParams) CRC() uint32 {
	return uint32(0x59ae2b16)
}

func (c *Client) MessagesDeleteScheduledMessages(params *MessagesDeleteScheduledMessagesParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesDiscardEncryptionParams struct {
	ChatId int32 `validate:"required"`
}

func (e *MessagesDiscardEncryptionParams) CRC() uint32 {
	return uint32(0xedd923c5)
}

func (c *Client) MessagesDiscardEncryption(params *MessagesDiscardEncryptionParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditChatAboutParams struct {
	Peer  InputPeer `validate:"required"`
	About string    `validate:"required"`
}

func (e *MessagesEditChatAboutParams) CRC() uint32 {
	return uint32(0xdef60797)
}

func (c *Client) MessagesEditChatAbout(params *MessagesEditChatAboutParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditChatAdminParams struct {
	ChatId  int32     `validate:"required"`
	UserId  InputUser `validate:"required"`
	IsAdmin bool      `validate:"required"`
}

func (e *MessagesEditChatAdminParams) CRC() uint32 {
	return uint32(0xa9e69f2e)
}

func (c *Client) MessagesEditChatAdmin(params *MessagesEditChatAdminParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditChatDefaultBannedRightsParams struct {
	Peer         InputPeer         `validate:"required"`
	BannedRights *ChatBannedRights `validate:"required"`
}

func (e *MessagesEditChatDefaultBannedRightsParams) CRC() uint32 {
	return uint32(0xa5866b41)
}

func (c *Client) MessagesEditChatDefaultBannedRights(params *MessagesEditChatDefaultBannedRightsParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditChatPhotoParams struct {
	ChatId int32          `validate:"required"`
	Photo  InputChatPhoto `validate:"required"`
}

func (e *MessagesEditChatPhotoParams) CRC() uint32 {
	return uint32(0xca4c79d8)
}

func (c *Client) MessagesEditChatPhoto(params *MessagesEditChatPhotoParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditChatTitleParams struct {
	ChatId int32  `validate:"required"`
	Title  string `validate:"required"`
}

func (e *MessagesEditChatTitleParams) CRC() uint32 {
	return uint32(0xdc452855)
}

func (c *Client) MessagesEditChatTitle(params *MessagesEditChatTitleParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditInlineBotMessageParams struct {
	// flags position
	NoWebpage   bool                     `flag:"1,encoded_in_bitflags"`
	Id          *InputBotInlineMessageID `validate:"required"`
	Message     string                   `flag:"11"`
	Media       InputMedia               `flag:"14"`
	ReplyMarkup ReplyMarkup              `flag:"2"`
	Entities    []MessageEntity          `flag:"3"`
}

func (e *MessagesEditInlineBotMessageParams) CRC() uint32 {
	return uint32(0x83557dba)
}

func (c *Client) MessagesEditInlineBotMessage(params *MessagesEditInlineBotMessageParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesEditMessageParams struct {
	// flags position
	NoWebpage    bool            `flag:"1,encoded_in_bitflags"`
	Peer         InputPeer       `validate:"required"`
	Id           int32           `validate:"required"`
	Message      string          `flag:"11"`
	Media        InputMedia      `flag:"14"`
	ReplyMarkup  ReplyMarkup     `flag:"2"`
	Entities     []MessageEntity `flag:"3"`
	ScheduleDate int32           `flag:"15"`
}

func (e *MessagesEditMessageParams) CRC() uint32 {
	return uint32(0x48f71778)
}

func (c *Client) MessagesEditMessage(params *MessagesEditMessageParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesExportChatInviteParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesExportChatInviteParams) CRC() uint32 {
	return uint32(0xdf7534c)
}

func (c *Client) MessagesExportChatInvite(params *MessagesExportChatInviteParams) (ExportedChatInvite, error) {
	var resp ExportedChatInvite
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesFaveStickerParams struct {
	Id     InputDocument `validate:"required"`
	Unfave bool          `validate:"required"`
}

func (e *MessagesFaveStickerParams) CRC() uint32 {
	return uint32(0xb9ffc55b)
}

func (c *Client) MessagesFaveSticker(params *MessagesFaveStickerParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesForwardMessagesParams struct {
	// flags position
	Silent       bool      `flag:"5,encoded_in_bitflags"`
	Background   bool      `flag:"6,encoded_in_bitflags"`
	WithMyScore  bool      `flag:"8,encoded_in_bitflags"`
	Grouped      bool      `flag:"9,encoded_in_bitflags"`
	FromPeer     InputPeer `validate:"required"`
	Id           []int32   `validate:"required"`
	RandomId     []int64   `validate:"required"`
	ToPeer       InputPeer `validate:"required"`
	ScheduleDate int32     `flag:"10"`
}

func (e *MessagesForwardMessagesParams) CRC() uint32 {
	return uint32(0xd9fee60e)
}

func (c *Client) MessagesForwardMessages(params *MessagesForwardMessagesParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetAllChatsParams struct {
	ExceptIds []int32 `validate:"required"`
}

func (e *MessagesGetAllChatsParams) CRC() uint32 {
	return uint32(0xeba80ff0)
}

func (c *Client) MessagesGetAllChats(params *MessagesGetAllChatsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetAllDraftsParams struct{}

func (e *MessagesGetAllDraftsParams) CRC() uint32 {
	return uint32(0x6a3f8d65)
}

func (c *Client) MessagesGetAllDrafts() (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(&MessagesGetAllDraftsParams{}, &resp)
	return resp, err
}

type MessagesGetAllStickersParams struct {
	Hash int32 `validate:"required"`
}

func (e *MessagesGetAllStickersParams) CRC() uint32 {
	return uint32(0x1c9618b1)
}

func (c *Client) MessagesGetAllStickers(params *MessagesGetAllStickersParams) (MessagesAllStickers, error) {
	var resp MessagesAllStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetArchivedStickersParams struct {
	// flags position
	Masks    bool  `flag:"0,encoded_in_bitflags"`
	OffsetId int64 `validate:"required"`
	Limit    int32 `validate:"required"`
}

func (e *MessagesGetArchivedStickersParams) CRC() uint32 {
	return uint32(0x57f17692)
}

func (c *Client) MessagesGetArchivedStickers(params *MessagesGetArchivedStickersParams) (MessagesArchivedStickers, error) {
	var resp MessagesArchivedStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetAttachedStickersParams struct {
	Media InputStickeredMedia `validate:"required"`
}

func (e *MessagesGetAttachedStickersParams) CRC() uint32 {
	return uint32(0xcc5b67cc)
}

func (c *Client) MessagesGetAttachedStickers(params *MessagesGetAttachedStickersParams) (StickerSetCovered, error) {
	var resp StickerSetCovered
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetBotCallbackAnswerParams struct {
	// flags position
	Game  bool      `flag:"1,encoded_in_bitflags"`
	Peer  InputPeer `validate:"required"`
	MsgId int32     `validate:"required"`
	Data  []byte    `flag:"0"`
}

func (e *MessagesGetBotCallbackAnswerParams) CRC() uint32 {
	return uint32(0x810a9fec)
}

func (c *Client) MessagesGetBotCallbackAnswer(params *MessagesGetBotCallbackAnswerParams) (MessagesBotCallbackAnswer, error) {
	var resp MessagesBotCallbackAnswer
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetChatsParams struct {
	Id []int32 `validate:"required"`
}

func (e *MessagesGetChatsParams) CRC() uint32 {
	return uint32(0x3c6aa187)
}

func (c *Client) MessagesGetChats(params *MessagesGetChatsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetCommonChatsParams struct {
	UserId InputUser `validate:"required"`
	MaxId  int32     `validate:"required"`
	Limit  int32     `validate:"required"`
}

func (e *MessagesGetCommonChatsParams) CRC() uint32 {
	return uint32(0xd0a48c4)
}

func (c *Client) MessagesGetCommonChats(params *MessagesGetCommonChatsParams) (MessagesChats, error) {
	var resp MessagesChats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetDhConfigParams struct {
	Version      int32 `validate:"required"`
	RandomLength int32 `validate:"required"`
}

func (e *MessagesGetDhConfigParams) CRC() uint32 {
	return uint32(0x26cf8950)
}

func (c *Client) MessagesGetDhConfig(params *MessagesGetDhConfigParams) (MessagesDhConfig, error) {
	var resp MessagesDhConfig
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetDialogFiltersParams struct{}

func (e *MessagesGetDialogFiltersParams) CRC() uint32 {
	return uint32(0xf19ed96d)
}

func (c *Client) MessagesGetDialogFilters() (DialogFilter, error) {
	var resp DialogFilter
	err := c.MakeRequest2(&MessagesGetDialogFiltersParams{}, &resp)
	return resp, err
}

type MessagesGetDialogUnreadMarksParams struct{}

func (e *MessagesGetDialogUnreadMarksParams) CRC() uint32 {
	return uint32(0x22e24e22)
}

func (c *Client) MessagesGetDialogUnreadMarks() (DialogPeer, error) {
	var resp DialogPeer
	err := c.MakeRequest2(&MessagesGetDialogUnreadMarksParams{}, &resp)
	return resp, err
}

type MessagesGetDialogsParams struct {
	// flags position
	ExcludePinned bool      `flag:"0,encoded_in_bitflags"`
	FolderId      int32     `flag:"1"`
	OffsetDate    int32     `validate:"required"`
	OffsetId      int32     `validate:"required"`
	OffsetPeer    InputPeer `validate:"required"`
	Limit         int32     `validate:"required"`
	Hash          int32     `validate:"required"`
}

func (e *MessagesGetDialogsParams) CRC() uint32 {
	return uint32(0xa0ee3b73)
}

func (c *Client) MessagesGetDialogs(params *MessagesGetDialogsParams) (MessagesDialogs, error) {
	var resp MessagesDialogs
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetDocumentByHashParams struct {
	Sha256   []byte `validate:"required"`
	Size     int32  `validate:"required"`
	MimeType string `validate:"required"`
}

func (e *MessagesGetDocumentByHashParams) CRC() uint32 {
	return uint32(0x338e2464)
}

func (c *Client) MessagesGetDocumentByHash(params *MessagesGetDocumentByHashParams) (Document, error) {
	var resp Document
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetEmojiKeywordsParams struct {
	LangCode string `validate:"required"`
}

func (e *MessagesGetEmojiKeywordsParams) CRC() uint32 {
	return uint32(0x35a0e062)
}

func (c *Client) MessagesGetEmojiKeywords(params *MessagesGetEmojiKeywordsParams) (EmojiKeywordsDifference, error) {
	var resp EmojiKeywordsDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetEmojiKeywordsDifferenceParams struct {
	LangCode    string `validate:"required"`
	FromVersion int32  `validate:"required"`
}

func (e *MessagesGetEmojiKeywordsDifferenceParams) CRC() uint32 {
	return uint32(0x1508b6af)
}

func (c *Client) MessagesGetEmojiKeywordsDifference(params *MessagesGetEmojiKeywordsDifferenceParams) (EmojiKeywordsDifference, error) {
	var resp EmojiKeywordsDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetEmojiKeywordsLanguagesParams struct {
	LangCodes []string `validate:"required"`
}

func (e *MessagesGetEmojiKeywordsLanguagesParams) CRC() uint32 {
	return uint32(0x4e9963b2)
}

func (c *Client) MessagesGetEmojiKeywordsLanguages(params *MessagesGetEmojiKeywordsLanguagesParams) (EmojiLanguage, error) {
	var resp EmojiLanguage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetEmojiURLParams struct {
	LangCode string `validate:"required"`
}

func (e *MessagesGetEmojiURLParams) CRC() uint32 {
	return uint32(0xd5b10c26)
}

func (c *Client) MessagesGetEmojiURL(params *MessagesGetEmojiURLParams) (EmojiURL, error) {
	var resp EmojiURL
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetFavedStickersParams struct {
	Hash int32 `validate:"required"`
}

func (e *MessagesGetFavedStickersParams) CRC() uint32 {
	return uint32(0x21ce0b0e)
}

func (c *Client) MessagesGetFavedStickers(params *MessagesGetFavedStickersParams) (MessagesFavedStickers, error) {
	var resp MessagesFavedStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetFeaturedStickersParams struct {
	Hash int32 `validate:"required"`
}

func (e *MessagesGetFeaturedStickersParams) CRC() uint32 {
	return uint32(0x2dacca4f)
}

func (c *Client) MessagesGetFeaturedStickers(params *MessagesGetFeaturedStickersParams) (MessagesFeaturedStickers, error) {
	var resp MessagesFeaturedStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetFullChatParams struct {
	ChatId int32 `validate:"required"`
}

func (e *MessagesGetFullChatParams) CRC() uint32 {
	return uint32(0x3b831c66)
}

func (c *Client) MessagesGetFullChat(params *MessagesGetFullChatParams) (MessagesChatFull, error) {
	var resp MessagesChatFull
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetGameHighScoresParams struct {
	Peer   InputPeer `validate:"required"`
	Id     int32     `validate:"required"`
	UserId InputUser `validate:"required"`
}

func (e *MessagesGetGameHighScoresParams) CRC() uint32 {
	return uint32(0xe822649d)
}

func (c *Client) MessagesGetGameHighScores(params *MessagesGetGameHighScoresParams) (MessagesHighScores, error) {
	var resp MessagesHighScores
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetHistoryParams struct {
	Peer       InputPeer `validate:"required"`
	OffsetId   int32     `validate:"required"`
	OffsetDate int32     `validate:"required"`
	AddOffset  int32     `validate:"required"`
	Limit      int32     `validate:"required"`
	MaxId      int32     `validate:"required"`
	MinId      int32     `validate:"required"`
	Hash       int32     `validate:"required"`
}

func (e *MessagesGetHistoryParams) CRC() uint32 {
	return uint32(0xdcbb8260)
}

func (c *Client) MessagesGetHistory(params *MessagesGetHistoryParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetInlineBotResultsParams struct {
	// flags position
	Bot      InputUser     `validate:"required"`
	Peer     InputPeer     `validate:"required"`
	GeoPoint InputGeoPoint `flag:"0"`
	Query    string        `validate:"required"`
	Offset   string        `validate:"required"`
}

func (e *MessagesGetInlineBotResultsParams) CRC() uint32 {
	return uint32(0x514e999d)
}

func (c *Client) MessagesGetInlineBotResults(params *MessagesGetInlineBotResultsParams) (MessagesBotResults, error) {
	var resp MessagesBotResults
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetInlineGameHighScoresParams struct {
	Id     *InputBotInlineMessageID `validate:"required"`
	UserId InputUser                `validate:"required"`
}

func (e *MessagesGetInlineGameHighScoresParams) CRC() uint32 {
	return uint32(0xf635e1b)
}

func (c *Client) MessagesGetInlineGameHighScores(params *MessagesGetInlineGameHighScoresParams) (MessagesHighScores, error) {
	var resp MessagesHighScores
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetMaskStickersParams struct {
	Hash int32 `validate:"required"`
}

func (e *MessagesGetMaskStickersParams) CRC() uint32 {
	return uint32(0x65b8c79f)
}

func (c *Client) MessagesGetMaskStickers(params *MessagesGetMaskStickersParams) (MessagesAllStickers, error) {
	var resp MessagesAllStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetMessageEditDataParams struct {
	Peer InputPeer `validate:"required"`
	Id   int32     `validate:"required"`
}

func (e *MessagesGetMessageEditDataParams) CRC() uint32 {
	return uint32(0xfda68d36)
}

func (c *Client) MessagesGetMessageEditData(params *MessagesGetMessageEditDataParams) (MessagesMessageEditData, error) {
	var resp MessagesMessageEditData
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetMessagesParams struct {
	Id []InputMessage `validate:"required"`
}

func (e *MessagesGetMessagesParams) CRC() uint32 {
	return uint32(0x63c66506)
}

func (c *Client) MessagesGetMessages(params *MessagesGetMessagesParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetMessagesViewsParams struct {
	Peer      InputPeer `validate:"required"`
	Id        []int32   `validate:"required"`
	Increment bool      `validate:"required"`
}

func (e *MessagesGetMessagesViewsParams) CRC() uint32 {
	return uint32(0xc4c8a55d)
}

func (c *Client) MessagesGetMessagesViews(params *MessagesGetMessagesViewsParams) (serialize.Int, error) {
	var resp serialize.Int
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetOldFeaturedStickersParams struct {
	Offset int32 `validate:"required"`
	Limit  int32 `validate:"required"`
	Hash   int32 `validate:"required"`
}

func (e *MessagesGetOldFeaturedStickersParams) CRC() uint32 {
	return uint32(0x5fe7025b)
}

func (c *Client) MessagesGetOldFeaturedStickers(params *MessagesGetOldFeaturedStickersParams) (MessagesFeaturedStickers, error) {
	var resp MessagesFeaturedStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetOnlinesParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesGetOnlinesParams) CRC() uint32 {
	return uint32(0x6e2be050)
}

func (c *Client) MessagesGetOnlines(params *MessagesGetOnlinesParams) (ChatOnlines, error) {
	var resp ChatOnlines
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetPeerDialogsParams struct {
	Peers []InputDialogPeer `validate:"required"`
}

func (e *MessagesGetPeerDialogsParams) CRC() uint32 {
	return uint32(0xe470bcfd)
}

func (c *Client) MessagesGetPeerDialogs(params *MessagesGetPeerDialogsParams) (MessagesPeerDialogs, error) {
	var resp MessagesPeerDialogs
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetPeerSettingsParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesGetPeerSettingsParams) CRC() uint32 {
	return uint32(0x3672e09c)
}

func (c *Client) MessagesGetPeerSettings(params *MessagesGetPeerSettingsParams) (PeerSettings, error) {
	var resp PeerSettings
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetPinnedDialogsParams struct {
	FolderId int32 `validate:"required"`
}

func (e *MessagesGetPinnedDialogsParams) CRC() uint32 {
	return uint32(0xd6b94df2)
}

func (c *Client) MessagesGetPinnedDialogs(params *MessagesGetPinnedDialogsParams) (MessagesPeerDialogs, error) {
	var resp MessagesPeerDialogs
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetPollResultsParams struct {
	Peer  InputPeer `validate:"required"`
	MsgId int32     `validate:"required"`
}

func (e *MessagesGetPollResultsParams) CRC() uint32 {
	return uint32(0x73bb643b)
}

func (c *Client) MessagesGetPollResults(params *MessagesGetPollResultsParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetPollVotesParams struct {
	// flags position
	Peer   InputPeer `validate:"required"`
	Id     int32     `validate:"required"`
	Option []byte    `flag:"0"`
	Offset string    `flag:"1"`
	Limit  int32     `validate:"required"`
}

func (e *MessagesGetPollVotesParams) CRC() uint32 {
	return uint32(0xb86e380e)
}

func (c *Client) MessagesGetPollVotes(params *MessagesGetPollVotesParams) (MessagesVotesList, error) {
	var resp MessagesVotesList
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetRecentLocationsParams struct {
	Peer  InputPeer `validate:"required"`
	Limit int32     `validate:"required"`
	Hash  int32     `validate:"required"`
}

func (e *MessagesGetRecentLocationsParams) CRC() uint32 {
	return uint32(0xbbc45b09)
}

func (c *Client) MessagesGetRecentLocations(params *MessagesGetRecentLocationsParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetRecentStickersParams struct {
	// flags position
	Attached bool  `flag:"0,encoded_in_bitflags"`
	Hash     int32 `validate:"required"`
}

func (e *MessagesGetRecentStickersParams) CRC() uint32 {
	return uint32(0x5ea192c9)
}

func (c *Client) MessagesGetRecentStickers(params *MessagesGetRecentStickersParams) (MessagesRecentStickers, error) {
	var resp MessagesRecentStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetSavedGifsParams struct {
	Hash int32 `validate:"required"`
}

func (e *MessagesGetSavedGifsParams) CRC() uint32 {
	return uint32(0x83bf3d52)
}

func (c *Client) MessagesGetSavedGifs(params *MessagesGetSavedGifsParams) (MessagesSavedGifs, error) {
	var resp MessagesSavedGifs
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetScheduledHistoryParams struct {
	Peer InputPeer `validate:"required"`
	Hash int32     `validate:"required"`
}

func (e *MessagesGetScheduledHistoryParams) CRC() uint32 {
	return uint32(0xe2c2685b)
}

func (c *Client) MessagesGetScheduledHistory(params *MessagesGetScheduledHistoryParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetScheduledMessagesParams struct {
	Peer InputPeer `validate:"required"`
	Id   []int32   `validate:"required"`
}

func (e *MessagesGetScheduledMessagesParams) CRC() uint32 {
	return uint32(0xbdbb0464)
}

func (c *Client) MessagesGetScheduledMessages(params *MessagesGetScheduledMessagesParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetSearchCountersParams struct {
	Peer    InputPeer        `validate:"required"`
	Filters []MessagesFilter `validate:"required"`
}

func (e *MessagesGetSearchCountersParams) CRC() uint32 {
	return uint32(0x732eef00)
}

func (c *Client) MessagesGetSearchCounters(params *MessagesGetSearchCountersParams) (MessagesSearchCounter, error) {
	var resp MessagesSearchCounter
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetSplitRangesParams struct{}

func (e *MessagesGetSplitRangesParams) CRC() uint32 {
	return uint32(0x1cff7e08)
}

func (c *Client) MessagesGetSplitRanges() (MessageRange, error) {
	var resp MessageRange
	err := c.MakeRequest2(&MessagesGetSplitRangesParams{}, &resp)
	return resp, err
}

type MessagesGetStatsURLParams struct {
	// flags position
	Dark   bool      `flag:"0,encoded_in_bitflags"`
	Peer   InputPeer `validate:"required"`
	Params string    `validate:"required"`
}

func (e *MessagesGetStatsURLParams) CRC() uint32 {
	return uint32(0x812c2ae6)
}

func (c *Client) MessagesGetStatsURL(params *MessagesGetStatsURLParams) (StatsURL, error) {
	var resp StatsURL
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetStickerSetParams struct {
	Stickerset InputStickerSet `validate:"required"`
}

func (e *MessagesGetStickerSetParams) CRC() uint32 {
	return uint32(0x2619a90e)
}

func (c *Client) MessagesGetStickerSet(params *MessagesGetStickerSetParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetStickersParams struct {
	Emoticon string `validate:"required"`
	Hash     int32  `validate:"required"`
}

func (e *MessagesGetStickersParams) CRC() uint32 {
	return uint32(0x43d4f2c)
}

func (c *Client) MessagesGetStickers(params *MessagesGetStickersParams) (MessagesStickers, error) {
	var resp MessagesStickers
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetSuggestedDialogFiltersParams struct{}

func (e *MessagesGetSuggestedDialogFiltersParams) CRC() uint32 {
	return uint32(0xa29cd42c)
}

func (c *Client) MessagesGetSuggestedDialogFilters() (DialogFilterSuggested, error) {
	var resp DialogFilterSuggested
	err := c.MakeRequest2(&MessagesGetSuggestedDialogFiltersParams{}, &resp)
	return resp, err
}

type MessagesGetUnreadMentionsParams struct {
	Peer      InputPeer `validate:"required"`
	OffsetId  int32     `validate:"required"`
	AddOffset int32     `validate:"required"`
	Limit     int32     `validate:"required"`
	MaxId     int32     `validate:"required"`
	MinId     int32     `validate:"required"`
}

func (e *MessagesGetUnreadMentionsParams) CRC() uint32 {
	return uint32(0x46578472)
}

func (c *Client) MessagesGetUnreadMentions(params *MessagesGetUnreadMentionsParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetWebPageParams struct {
	Url  string `validate:"required"`
	Hash int32  `validate:"required"`
}

func (e *MessagesGetWebPageParams) CRC() uint32 {
	return uint32(0x32ca8f91)
}

func (c *Client) MessagesGetWebPage(params *MessagesGetWebPageParams) (WebPage, error) {
	var resp WebPage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesGetWebPagePreviewParams struct {
	// flags position
	Message  string          `validate:"required"`
	Entities []MessageEntity `flag:"3"`
}

func (e *MessagesGetWebPagePreviewParams) CRC() uint32 {
	return uint32(0x8b68b0cc)
}

func (c *Client) MessagesGetWebPagePreview(params *MessagesGetWebPagePreviewParams) (MessageMedia, error) {
	var resp MessageMedia
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesHidePeerSettingsBarParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesHidePeerSettingsBarParams) CRC() uint32 {
	return uint32(0x4facb138)
}

func (c *Client) MessagesHidePeerSettingsBar(params *MessagesHidePeerSettingsBarParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesImportChatInviteParams struct {
	Hash string `validate:"required"`
}

func (e *MessagesImportChatInviteParams) CRC() uint32 {
	return uint32(0x6c50051c)
}

func (c *Client) MessagesImportChatInvite(params *MessagesImportChatInviteParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesInstallStickerSetParams struct {
	Stickerset InputStickerSet `validate:"required"`
	Archived   bool            `validate:"required"`
}

func (e *MessagesInstallStickerSetParams) CRC() uint32 {
	return uint32(0xc78fe460)
}

func (c *Client) MessagesInstallStickerSet(params *MessagesInstallStickerSetParams) (MessagesStickerSetInstallResult, error) {
	var resp MessagesStickerSetInstallResult
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesMarkDialogUnreadParams struct {
	// flags position
	Unread bool            `flag:"0,encoded_in_bitflags"`
	Peer   InputDialogPeer `validate:"required"`
}

func (e *MessagesMarkDialogUnreadParams) CRC() uint32 {
	return uint32(0xc286d98f)
}

func (c *Client) MessagesMarkDialogUnread(params *MessagesMarkDialogUnreadParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesMigrateChatParams struct {
	ChatId int32 `validate:"required"`
}

func (e *MessagesMigrateChatParams) CRC() uint32 {
	return uint32(0x15a3b8e3)
}

func (c *Client) MessagesMigrateChat(params *MessagesMigrateChatParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReadEncryptedHistoryParams struct {
	Peer    *InputEncryptedChat `validate:"required"`
	MaxDate int32               `validate:"required"`
}

func (e *MessagesReadEncryptedHistoryParams) CRC() uint32 {
	return uint32(0x7f4b690a)
}

func (c *Client) MessagesReadEncryptedHistory(params *MessagesReadEncryptedHistoryParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReadFeaturedStickersParams struct {
	Id []int64 `validate:"required"`
}

func (e *MessagesReadFeaturedStickersParams) CRC() uint32 {
	return uint32(0x5b118126)
}

func (c *Client) MessagesReadFeaturedStickers(params *MessagesReadFeaturedStickersParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReadHistoryParams struct {
	Peer  InputPeer `validate:"required"`
	MaxId int32     `validate:"required"`
}

func (e *MessagesReadHistoryParams) CRC() uint32 {
	return uint32(0xe306d3a)
}

func (c *Client) MessagesReadHistory(params *MessagesReadHistoryParams) (MessagesAffectedMessages, error) {
	var resp MessagesAffectedMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReadMentionsParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesReadMentionsParams) CRC() uint32 {
	return uint32(0xf0189d3)
}

func (c *Client) MessagesReadMentions(params *MessagesReadMentionsParams) (MessagesAffectedHistory, error) {
	var resp MessagesAffectedHistory
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReadMessageContentsParams struct {
	Id []int32 `validate:"required"`
}

func (e *MessagesReadMessageContentsParams) CRC() uint32 {
	return uint32(0x36a73f77)
}

func (c *Client) MessagesReadMessageContents(params *MessagesReadMessageContentsParams) (MessagesAffectedMessages, error) {
	var resp MessagesAffectedMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReceivedMessagesParams struct {
	MaxId int32 `validate:"required"`
}

func (e *MessagesReceivedMessagesParams) CRC() uint32 {
	return uint32(0x5a954c0)
}

func (c *Client) MessagesReceivedMessages(params *MessagesReceivedMessagesParams) (ReceivedNotifyMessage, error) {
	var resp ReceivedNotifyMessage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReceivedQueueParams struct {
	MaxQts int32 `validate:"required"`
}

func (e *MessagesReceivedQueueParams) CRC() uint32 {
	return uint32(0x55a5bb66)
}

func (c *Client) MessagesReceivedQueue(params *MessagesReceivedQueueParams) (serialize.Long, error) {
	var resp serialize.Long
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReorderPinnedDialogsParams struct {
	// flags position
	Force    bool              `flag:"0,encoded_in_bitflags"`
	FolderId int32             `validate:"required"`
	Order    []InputDialogPeer `validate:"required"`
}

func (e *MessagesReorderPinnedDialogsParams) CRC() uint32 {
	return uint32(0x3b1adf37)
}

func (c *Client) MessagesReorderPinnedDialogs(params *MessagesReorderPinnedDialogsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReorderStickerSetsParams struct {
	// flags position
	Masks bool    `flag:"0,encoded_in_bitflags"`
	Order []int64 `validate:"required"`
}

func (e *MessagesReorderStickerSetsParams) CRC() uint32 {
	return uint32(0x78337739)
}

func (c *Client) MessagesReorderStickerSets(params *MessagesReorderStickerSetsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReportParams struct {
	Peer   InputPeer    `validate:"required"`
	Id     []int32      `validate:"required"`
	Reason ReportReason `validate:"required"`
}

func (e *MessagesReportParams) CRC() uint32 {
	return uint32(0xbd82b658)
}

func (c *Client) MessagesReport(params *MessagesReportParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReportEncryptedSpamParams struct {
	Peer *InputEncryptedChat `validate:"required"`
}

func (e *MessagesReportEncryptedSpamParams) CRC() uint32 {
	return uint32(0x4b0c8c0f)
}

func (c *Client) MessagesReportEncryptedSpam(params *MessagesReportEncryptedSpamParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesReportSpamParams struct {
	Peer InputPeer `validate:"required"`
}

func (e *MessagesReportSpamParams) CRC() uint32 {
	return uint32(0xcf1592db)
}

func (c *Client) MessagesReportSpam(params *MessagesReportSpamParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesRequestEncryptionParams struct {
	UserId   InputUser `validate:"required"`
	RandomId int32     `validate:"required"`
	GA       []byte    `validate:"required"`
}

func (e *MessagesRequestEncryptionParams) CRC() uint32 {
	return uint32(0xf64daf43)
}

func (c *Client) MessagesRequestEncryption(params *MessagesRequestEncryptionParams) (EncryptedChat, error) {
	var resp EncryptedChat
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesRequestUrlAuthParams struct {
	Peer     InputPeer `validate:"required"`
	MsgId    int32     `validate:"required"`
	ButtonId int32     `validate:"required"`
}

func (e *MessagesRequestUrlAuthParams) CRC() uint32 {
	return uint32(0xe33f5613)
}

func (c *Client) MessagesRequestUrlAuth(params *MessagesRequestUrlAuthParams) (UrlAuthResult, error) {
	var resp UrlAuthResult
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSaveDraftParams struct {
	// flags position
	NoWebpage    bool            `flag:"1,encoded_in_bitflags"`
	ReplyToMsgId int32           `flag:"0"`
	Peer         InputPeer       `validate:"required"`
	Message      string          `validate:"required"`
	Entities     []MessageEntity `flag:"3"`
}

func (e *MessagesSaveDraftParams) CRC() uint32 {
	return uint32(0xbc39e14b)
}

func (c *Client) MessagesSaveDraft(params *MessagesSaveDraftParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSaveGifParams struct {
	Id     InputDocument `validate:"required"`
	Unsave bool          `validate:"required"`
}

func (e *MessagesSaveGifParams) CRC() uint32 {
	return uint32(0x327a30cb)
}

func (c *Client) MessagesSaveGif(params *MessagesSaveGifParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSaveRecentStickerParams struct {
	// flags position
	Attached bool          `flag:"0,encoded_in_bitflags"`
	Id       InputDocument `validate:"required"`
	Unsave   bool          `validate:"required"`
}

func (e *MessagesSaveRecentStickerParams) CRC() uint32 {
	return uint32(0x392718f8)
}

func (c *Client) MessagesSaveRecentSticker(params *MessagesSaveRecentStickerParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSearchParams struct {
	// flags position
	Peer      InputPeer      `validate:"required"`
	Q         string         `validate:"required"`
	FromId    InputUser      `flag:"0"`
	Filter    MessagesFilter `validate:"required"`
	MinDate   int32          `validate:"required"`
	MaxDate   int32          `validate:"required"`
	OffsetId  int32          `validate:"required"`
	AddOffset int32          `validate:"required"`
	Limit     int32          `validate:"required"`
	MaxId     int32          `validate:"required"`
	MinId     int32          `validate:"required"`
	Hash      int32          `validate:"required"`
}

func (e *MessagesSearchParams) CRC() uint32 {
	return uint32(0x8614ef68)
}

func (c *Client) MessagesSearch(params *MessagesSearchParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSearchGlobalParams struct {
	// flags position
	FolderId   int32     `flag:"0"`
	Q          string    `validate:"required"`
	OffsetRate int32     `validate:"required"`
	OffsetPeer InputPeer `validate:"required"`
	OffsetId   int32     `validate:"required"`
	Limit      int32     `validate:"required"`
}

func (e *MessagesSearchGlobalParams) CRC() uint32 {
	return uint32(0xbf7225a4)
}

func (c *Client) MessagesSearchGlobal(params *MessagesSearchGlobalParams) (MessagesMessages, error) {
	var resp MessagesMessages
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSearchStickerSetsParams struct {
	// flags position
	ExcludeFeatured bool   `flag:"0,encoded_in_bitflags"`
	Q               string `validate:"required"`
	Hash            int32  `validate:"required"`
}

func (e *MessagesSearchStickerSetsParams) CRC() uint32 {
	return uint32(0xc2b7d08b)
}

func (c *Client) MessagesSearchStickerSets(params *MessagesSearchStickerSetsParams) (MessagesFoundStickerSets, error) {
	var resp MessagesFoundStickerSets
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendEncryptedParams struct {
	Peer     *InputEncryptedChat `validate:"required"`
	RandomId int64               `validate:"required"`
	Data     []byte              `validate:"required"`
}

func (e *MessagesSendEncryptedParams) CRC() uint32 {
	return uint32(0xa9776773)
}

func (c *Client) MessagesSendEncrypted(params *MessagesSendEncryptedParams) (MessagesSentEncryptedMessage, error) {
	var resp MessagesSentEncryptedMessage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendEncryptedFileParams struct {
	Peer     *InputEncryptedChat `validate:"required"`
	RandomId int64               `validate:"required"`
	Data     []byte              `validate:"required"`
	File     InputEncryptedFile  `validate:"required"`
}

func (e *MessagesSendEncryptedFileParams) CRC() uint32 {
	return uint32(0x9a901b66)
}

func (c *Client) MessagesSendEncryptedFile(params *MessagesSendEncryptedFileParams) (MessagesSentEncryptedMessage, error) {
	var resp MessagesSentEncryptedMessage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendEncryptedServiceParams struct {
	Peer     *InputEncryptedChat `validate:"required"`
	RandomId int64               `validate:"required"`
	Data     []byte              `validate:"required"`
}

func (e *MessagesSendEncryptedServiceParams) CRC() uint32 {
	return uint32(0x32d439a4)
}

func (c *Client) MessagesSendEncryptedService(params *MessagesSendEncryptedServiceParams) (MessagesSentEncryptedMessage, error) {
	var resp MessagesSentEncryptedMessage
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendInlineBotResultParams struct {
	// flags position
	Silent       bool      `flag:"5,encoded_in_bitflags"`
	Background   bool      `flag:"6,encoded_in_bitflags"`
	ClearDraft   bool      `flag:"7,encoded_in_bitflags"`
	HideVia      bool      `flag:"11,encoded_in_bitflags"`
	Peer         InputPeer `validate:"required"`
	ReplyToMsgId int32     `flag:"0"`
	RandomId     int64     `validate:"required"`
	QueryId      int64     `validate:"required"`
	Id           string    `validate:"required"`
	ScheduleDate int32     `flag:"10"`
}

func (e *MessagesSendInlineBotResultParams) CRC() uint32 {
	return uint32(0x220815b0)
}

func (c *Client) MessagesSendInlineBotResult(params *MessagesSendInlineBotResultParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendMediaParams struct {
	// flags position
	Silent       bool            `flag:"5,encoded_in_bitflags"`
	Background   bool            `flag:"6,encoded_in_bitflags"`
	ClearDraft   bool            `flag:"7,encoded_in_bitflags"`
	Peer         InputPeer       `validate:"required"`
	ReplyToMsgId int32           `flag:"0"`
	Media        InputMedia      `validate:"required"`
	Message      string          `validate:"required"`
	RandomId     int64           `validate:"required"`
	ReplyMarkup  ReplyMarkup     `flag:"2"`
	Entities     []MessageEntity `flag:"3"`
	ScheduleDate int32           `flag:"10"`
}

func (e *MessagesSendMediaParams) CRC() uint32 {
	return uint32(0x3491eba9)
}

func (c *Client) MessagesSendMedia(params *MessagesSendMediaParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendMessageParams struct {
	// flags position
	NoWebpage    bool            `flag:"1,encoded_in_bitflags"`
	Silent       bool            `flag:"5,encoded_in_bitflags"`
	Background   bool            `flag:"6,encoded_in_bitflags"`
	ClearDraft   bool            `flag:"7,encoded_in_bitflags"`
	Peer         InputPeer       `validate:"required"`
	ReplyToMsgId int32           `flag:"0"`
	Message      string          `validate:"required"`
	RandomId     int64           `validate:"required"`
	ReplyMarkup  ReplyMarkup     `flag:"2"`
	Entities     []MessageEntity `flag:"3"`
	ScheduleDate int32           `flag:"10"`
}

func (e *MessagesSendMessageParams) CRC() uint32 {
	return uint32(0x520c3870)
}

func (c *Client) MessagesSendMessage(params *MessagesSendMessageParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendMultiMediaParams struct {
	// flags position
	Silent       bool                `flag:"5,encoded_in_bitflags"`
	Background   bool                `flag:"6,encoded_in_bitflags"`
	ClearDraft   bool                `flag:"7,encoded_in_bitflags"`
	Peer         InputPeer           `validate:"required"`
	ReplyToMsgId int32               `flag:"0"`
	MultiMedia   []*InputSingleMedia `validate:"required"`
	ScheduleDate int32               `flag:"10"`
}

func (e *MessagesSendMultiMediaParams) CRC() uint32 {
	return uint32(0xcc0110cb)
}

func (c *Client) MessagesSendMultiMedia(params *MessagesSendMultiMediaParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendScheduledMessagesParams struct {
	Peer InputPeer `validate:"required"`
	Id   []int32   `validate:"required"`
}

func (e *MessagesSendScheduledMessagesParams) CRC() uint32 {
	return uint32(0xbd38850a)
}

func (c *Client) MessagesSendScheduledMessages(params *MessagesSendScheduledMessagesParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendScreenshotNotificationParams struct {
	Peer         InputPeer `validate:"required"`
	ReplyToMsgId int32     `validate:"required"`
	RandomId     int64     `validate:"required"`
}

func (e *MessagesSendScreenshotNotificationParams) CRC() uint32 {
	return uint32(0xc97df020)
}

func (c *Client) MessagesSendScreenshotNotification(params *MessagesSendScreenshotNotificationParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSendVoteParams struct {
	Peer    InputPeer `validate:"required"`
	MsgId   int32     `validate:"required"`
	Options [][]byte  `validate:"required"`
}

func (e *MessagesSendVoteParams) CRC() uint32 {
	return uint32(0x10ea6184)
}

func (c *Client) MessagesSendVote(params *MessagesSendVoteParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetBotCallbackAnswerParams struct {
	// flags position
	Alert     bool   `flag:"1,encoded_in_bitflags"`
	QueryId   int64  `validate:"required"`
	Message   string `flag:"0"`
	Url       string `flag:"2"`
	CacheTime int32  `validate:"required"`
}

func (e *MessagesSetBotCallbackAnswerParams) CRC() uint32 {
	return uint32(0xd58f130a)
}

func (c *Client) MessagesSetBotCallbackAnswer(params *MessagesSetBotCallbackAnswerParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetBotPrecheckoutResultsParams struct {
	// flags position
	Success bool   `flag:"1,encoded_in_bitflags"`
	QueryId int64  `validate:"required"`
	Error   string `flag:"0"`
}

func (e *MessagesSetBotPrecheckoutResultsParams) CRC() uint32 {
	return uint32(0x9c2dd95)
}

func (c *Client) MessagesSetBotPrecheckoutResults(params *MessagesSetBotPrecheckoutResultsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetBotShippingResultsParams struct {
	// flags position
	QueryId         int64             `validate:"required"`
	Error           string            `flag:"0"`
	ShippingOptions []*ShippingOption `flag:"1"`
}

func (e *MessagesSetBotShippingResultsParams) CRC() uint32 {
	return uint32(0xe5f672fa)
}

func (c *Client) MessagesSetBotShippingResults(params *MessagesSetBotShippingResultsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetEncryptedTypingParams struct {
	Peer   *InputEncryptedChat `validate:"required"`
	Typing bool                `validate:"required"`
}

func (e *MessagesSetEncryptedTypingParams) CRC() uint32 {
	return uint32(0x791451ed)
}

func (c *Client) MessagesSetEncryptedTyping(params *MessagesSetEncryptedTypingParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetGameScoreParams struct {
	// flags position
	EditMessage bool      `flag:"0,encoded_in_bitflags"`
	Force       bool      `flag:"1,encoded_in_bitflags"`
	Peer        InputPeer `validate:"required"`
	Id          int32     `validate:"required"`
	UserId      InputUser `validate:"required"`
	Score       int32     `validate:"required"`
}

func (e *MessagesSetGameScoreParams) CRC() uint32 {
	return uint32(0x8ef8ecc0)
}

func (c *Client) MessagesSetGameScore(params *MessagesSetGameScoreParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetInlineBotResultsParams struct {
	// flags position
	Gallery    bool                   `flag:"0,encoded_in_bitflags"`
	Private    bool                   `flag:"1,encoded_in_bitflags"`
	QueryId    int64                  `validate:"required"`
	Results    []InputBotInlineResult `validate:"required"`
	CacheTime  int32                  `validate:"required"`
	NextOffset string                 `flag:"2"`
	SwitchPm   *InlineBotSwitchPM     `flag:"3"`
}

func (e *MessagesSetInlineBotResultsParams) CRC() uint32 {
	return uint32(0xeb5ea206)
}

func (c *Client) MessagesSetInlineBotResults(params *MessagesSetInlineBotResultsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetInlineGameScoreParams struct {
	// flags position
	EditMessage bool                     `flag:"0,encoded_in_bitflags"`
	Force       bool                     `flag:"1,encoded_in_bitflags"`
	Id          *InputBotInlineMessageID `validate:"required"`
	UserId      InputUser                `validate:"required"`
	Score       int32                    `validate:"required"`
}

func (e *MessagesSetInlineGameScoreParams) CRC() uint32 {
	return uint32(0x15ad9f64)
}

func (c *Client) MessagesSetInlineGameScore(params *MessagesSetInlineGameScoreParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesSetTypingParams struct {
	Peer   InputPeer         `validate:"required"`
	Action SendMessageAction `validate:"required"`
}

func (e *MessagesSetTypingParams) CRC() uint32 {
	return uint32(0xa3825e50)
}

func (c *Client) MessagesSetTyping(params *MessagesSetTypingParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesStartBotParams struct {
	Bot        InputUser `validate:"required"`
	Peer       InputPeer `validate:"required"`
	RandomId   int64     `validate:"required"`
	StartParam string    `validate:"required"`
}

func (e *MessagesStartBotParams) CRC() uint32 {
	return uint32(0xe6df7378)
}

func (c *Client) MessagesStartBot(params *MessagesStartBotParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesToggleDialogPinParams struct {
	// flags position
	Pinned bool            `flag:"0,encoded_in_bitflags"`
	Peer   InputDialogPeer `validate:"required"`
}

func (e *MessagesToggleDialogPinParams) CRC() uint32 {
	return uint32(0xa731e257)
}

func (c *Client) MessagesToggleDialogPin(params *MessagesToggleDialogPinParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesToggleStickerSetsParams struct {
	// flags position
	Uninstall   bool              `flag:"0,encoded_in_bitflags"`
	Archive     bool              `flag:"1,encoded_in_bitflags"`
	Unarchive   bool              `flag:"2,encoded_in_bitflags"`
	Stickersets []InputStickerSet `validate:"required"`
}

func (e *MessagesToggleStickerSetsParams) CRC() uint32 {
	return uint32(0xb5052fea)
}

func (c *Client) MessagesToggleStickerSets(params *MessagesToggleStickerSetsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUninstallStickerSetParams struct {
	Stickerset InputStickerSet `validate:"required"`
}

func (e *MessagesUninstallStickerSetParams) CRC() uint32 {
	return uint32(0xf96e55de)
}

func (c *Client) MessagesUninstallStickerSet(params *MessagesUninstallStickerSetParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUpdateDialogFilterParams struct {
	// flags position
	Id     int32         `validate:"required"`
	Filter *DialogFilter `flag:"0"`
}

func (e *MessagesUpdateDialogFilterParams) CRC() uint32 {
	return uint32(0x1ad4a04a)
}

func (c *Client) MessagesUpdateDialogFilter(params *MessagesUpdateDialogFilterParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUpdateDialogFiltersOrderParams struct {
	Order []int32 `validate:"required"`
}

func (e *MessagesUpdateDialogFiltersOrderParams) CRC() uint32 {
	return uint32(0xc563c1e4)
}

func (c *Client) MessagesUpdateDialogFiltersOrder(params *MessagesUpdateDialogFiltersOrderParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUpdatePinnedMessageParams struct {
	// flags position
	Silent bool      `flag:"0,encoded_in_bitflags"`
	Peer   InputPeer `validate:"required"`
	Id     int32     `validate:"required"`
}

func (e *MessagesUpdatePinnedMessageParams) CRC() uint32 {
	return uint32(0xd2aaf7ec)
}

func (c *Client) MessagesUpdatePinnedMessage(params *MessagesUpdatePinnedMessageParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUploadEncryptedFileParams struct {
	Peer *InputEncryptedChat `validate:"required"`
	File InputEncryptedFile  `validate:"required"`
}

func (e *MessagesUploadEncryptedFileParams) CRC() uint32 {
	return uint32(0x5057c497)
}

func (c *Client) MessagesUploadEncryptedFile(params *MessagesUploadEncryptedFileParams) (EncryptedFile, error) {
	var resp EncryptedFile
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type MessagesUploadMediaParams struct {
	Peer  InputPeer  `validate:"required"`
	Media InputMedia `validate:"required"`
}

func (e *MessagesUploadMediaParams) CRC() uint32 {
	return uint32(0x519bc2b1)
}

func (c *Client) MessagesUploadMedia(params *MessagesUploadMediaParams) (MessageMedia, error) {
	var resp MessageMedia
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsClearSavedInfoParams struct {
	// flags position
	Credentials bool `flag:"0,encoded_in_bitflags"`
	Info        bool `flag:"1,encoded_in_bitflags"`
}

func (e *PaymentsClearSavedInfoParams) CRC() uint32 {
	return uint32(0xd83d70c1)
}

func (c *Client) PaymentsClearSavedInfo(params *PaymentsClearSavedInfoParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsGetBankCardDataParams struct {
	Number string `validate:"required"`
}

func (e *PaymentsGetBankCardDataParams) CRC() uint32 {
	return uint32(0x2e79d779)
}

func (c *Client) PaymentsGetBankCardData(params *PaymentsGetBankCardDataParams) (PaymentsBankCardData, error) {
	var resp PaymentsBankCardData
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsGetPaymentFormParams struct {
	MsgId int32 `validate:"required"`
}

func (e *PaymentsGetPaymentFormParams) CRC() uint32 {
	return uint32(0x99f09745)
}

func (c *Client) PaymentsGetPaymentForm(params *PaymentsGetPaymentFormParams) (PaymentsPaymentForm, error) {
	var resp PaymentsPaymentForm
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsGetPaymentReceiptParams struct {
	MsgId int32 `validate:"required"`
}

func (e *PaymentsGetPaymentReceiptParams) CRC() uint32 {
	return uint32(0xa092a980)
}

func (c *Client) PaymentsGetPaymentReceipt(params *PaymentsGetPaymentReceiptParams) (PaymentsPaymentReceipt, error) {
	var resp PaymentsPaymentReceipt
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsGetSavedInfoParams struct{}

func (e *PaymentsGetSavedInfoParams) CRC() uint32 {
	return uint32(0x227d824b)
}

func (c *Client) PaymentsGetSavedInfo() (PaymentsSavedInfo, error) {
	var resp PaymentsSavedInfo
	err := c.MakeRequest2(&PaymentsGetSavedInfoParams{}, &resp)
	return resp, err
}

type PaymentsSendPaymentFormParams struct {
	// flags position
	MsgId            int32                   `validate:"required"`
	RequestedInfoId  string                  `flag:"0"`
	ShippingOptionId string                  `flag:"1"`
	Credentials      InputPaymentCredentials `validate:"required"`
}

func (e *PaymentsSendPaymentFormParams) CRC() uint32 {
	return uint32(0x2b8879b3)
}

func (c *Client) PaymentsSendPaymentForm(params *PaymentsSendPaymentFormParams) (PaymentsPaymentResult, error) {
	var resp PaymentsPaymentResult
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PaymentsValidateRequestedInfoParams struct {
	// flags position
	Save  bool                  `flag:"0,encoded_in_bitflags"`
	MsgId int32                 `validate:"required"`
	Info  *PaymentRequestedInfo `validate:"required"`
}

func (e *PaymentsValidateRequestedInfoParams) CRC() uint32 {
	return uint32(0x770a8e74)
}

func (c *Client) PaymentsValidateRequestedInfo(params *PaymentsValidateRequestedInfoParams) (PaymentsValidatedRequestedInfo, error) {
	var resp PaymentsValidatedRequestedInfo
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneAcceptCallParams struct {
	Peer     *InputPhoneCall    `validate:"required"`
	GB       []byte             `validate:"required"`
	Protocol *PhoneCallProtocol `validate:"required"`
}

func (e *PhoneAcceptCallParams) CRC() uint32 {
	return uint32(0x3bd2b4a0)
}

func (c *Client) PhoneAcceptCall(params *PhoneAcceptCallParams) (PhonePhoneCall, error) {
	var resp PhonePhoneCall
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneConfirmCallParams struct {
	Peer           *InputPhoneCall    `validate:"required"`
	GA             []byte             `validate:"required"`
	KeyFingerprint int64              `validate:"required"`
	Protocol       *PhoneCallProtocol `validate:"required"`
}

func (e *PhoneConfirmCallParams) CRC() uint32 {
	return uint32(0x2efe1722)
}

func (c *Client) PhoneConfirmCall(params *PhoneConfirmCallParams) (PhonePhoneCall, error) {
	var resp PhonePhoneCall
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneDiscardCallParams struct {
	// flags position
	Video        bool                   `flag:"0,encoded_in_bitflags"`
	Peer         *InputPhoneCall        `validate:"required"`
	Duration     int32                  `validate:"required"`
	Reason       PhoneCallDiscardReason `validate:"required"`
	ConnectionId int64                  `validate:"required"`
}

func (e *PhoneDiscardCallParams) CRC() uint32 {
	return uint32(0xb2cbc1c0)
}

func (c *Client) PhoneDiscardCall(params *PhoneDiscardCallParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneGetCallConfigParams struct{}

func (e *PhoneGetCallConfigParams) CRC() uint32 {
	return uint32(0x55451fa9)
}

func (c *Client) PhoneGetCallConfig() (DataJSON, error) {
	var resp DataJSON
	err := c.MakeRequest2(&PhoneGetCallConfigParams{}, &resp)
	return resp, err
}

type PhoneReceivedCallParams struct {
	Peer *InputPhoneCall `validate:"required"`
}

func (e *PhoneReceivedCallParams) CRC() uint32 {
	return uint32(0x17d54f61)
}

func (c *Client) PhoneReceivedCall(params *PhoneReceivedCallParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneRequestCallParams struct {
	// flags position
	Video    bool               `flag:"0,encoded_in_bitflags"`
	UserId   InputUser          `validate:"required"`
	RandomId int32              `validate:"required"`
	GAHash   []byte             `validate:"required"`
	Protocol *PhoneCallProtocol `validate:"required"`
}

func (e *PhoneRequestCallParams) CRC() uint32 {
	return uint32(0x42ff96ed)
}

func (c *Client) PhoneRequestCall(params *PhoneRequestCallParams) (PhonePhoneCall, error) {
	var resp PhonePhoneCall
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneSaveCallDebugParams struct {
	Peer  *InputPhoneCall `validate:"required"`
	Debug *DataJSON       `validate:"required"`
}

func (e *PhoneSaveCallDebugParams) CRC() uint32 {
	return uint32(0x277add7e)
}

func (c *Client) PhoneSaveCallDebug(params *PhoneSaveCallDebugParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneSendSignalingDataParams struct {
	Peer *InputPhoneCall `validate:"required"`
	Data []byte          `validate:"required"`
}

func (e *PhoneSendSignalingDataParams) CRC() uint32 {
	return uint32(0xff7a9383)
}

func (c *Client) PhoneSendSignalingData(params *PhoneSendSignalingDataParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhoneSetCallRatingParams struct {
	// flags position
	UserInitiative bool            `flag:"0,encoded_in_bitflags"`
	Peer           *InputPhoneCall `validate:"required"`
	Rating         int32           `validate:"required"`
	Comment        string          `validate:"required"`
}

func (e *PhoneSetCallRatingParams) CRC() uint32 {
	return uint32(0x59ead627)
}

func (c *Client) PhoneSetCallRating(params *PhoneSetCallRatingParams) (Updates, error) {
	var resp Updates
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhotosDeletePhotosParams struct {
	Id []InputPhoto `validate:"required"`
}

func (e *PhotosDeletePhotosParams) CRC() uint32 {
	return uint32(0x87cf7f2f)
}

func (c *Client) PhotosDeletePhotos(params *PhotosDeletePhotosParams) (serialize.Long, error) {
	var resp serialize.Long
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhotosGetUserPhotosParams struct {
	UserId InputUser `validate:"required"`
	Offset int32     `validate:"required"`
	MaxId  int64     `validate:"required"`
	Limit  int32     `validate:"required"`
}

func (e *PhotosGetUserPhotosParams) CRC() uint32 {
	return uint32(0x91cd32a8)
}

func (c *Client) PhotosGetUserPhotos(params *PhotosGetUserPhotosParams) (PhotosPhotos, error) {
	var resp PhotosPhotos
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhotosUpdateProfilePhotoParams struct {
	Id InputPhoto `validate:"required"`
}

func (e *PhotosUpdateProfilePhotoParams) CRC() uint32 {
	return uint32(0x72d4742c)
}

func (c *Client) PhotosUpdateProfilePhoto(params *PhotosUpdateProfilePhotoParams) (PhotosPhoto, error) {
	var resp PhotosPhoto
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type PhotosUploadProfilePhotoParams struct {
	// flags position
	File         InputFile `flag:"0"`
	Video        InputFile `flag:"1"`
	VideoStartTs float64   `flag:"2"`
}

func (e *PhotosUploadProfilePhotoParams) CRC() uint32 {
	return uint32(0x89f30f69)
}

func (c *Client) PhotosUploadProfilePhoto(params *PhotosUploadProfilePhotoParams) (PhotosPhoto, error) {
	var resp PhotosPhoto
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StatsGetBroadcastStatsParams struct {
	// flags position
	Dark    bool         `flag:"0,encoded_in_bitflags"`
	Channel InputChannel `validate:"required"`
}

func (e *StatsGetBroadcastStatsParams) CRC() uint32 {
	return uint32(0xab42441a)
}

func (c *Client) StatsGetBroadcastStats(params *StatsGetBroadcastStatsParams) (StatsBroadcastStats, error) {
	var resp StatsBroadcastStats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StatsGetMegagroupStatsParams struct {
	// flags position
	Dark    bool         `flag:"0,encoded_in_bitflags"`
	Channel InputChannel `validate:"required"`
}

func (e *StatsGetMegagroupStatsParams) CRC() uint32 {
	return uint32(0xdcdf8607)
}

func (c *Client) StatsGetMegagroupStats(params *StatsGetMegagroupStatsParams) (StatsMegagroupStats, error) {
	var resp StatsMegagroupStats
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StatsLoadAsyncGraphParams struct {
	// flags position
	Token string `validate:"required"`
	X     int64  `flag:"0"`
}

func (e *StatsLoadAsyncGraphParams) CRC() uint32 {
	return uint32(0x621d5fa0)
}

func (c *Client) StatsLoadAsyncGraph(params *StatsLoadAsyncGraphParams) (StatsGraph, error) {
	var resp StatsGraph
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StickersAddStickerToSetParams struct {
	Stickerset InputStickerSet      `validate:"required"`
	Sticker    *InputStickerSetItem `validate:"required"`
}

func (e *StickersAddStickerToSetParams) CRC() uint32 {
	return uint32(0x8653febe)
}

func (c *Client) StickersAddStickerToSet(params *StickersAddStickerToSetParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StickersChangeStickerPositionParams struct {
	Sticker  InputDocument `validate:"required"`
	Position int32         `validate:"required"`
}

func (e *StickersChangeStickerPositionParams) CRC() uint32 {
	return uint32(0xffb6d4ca)
}

func (c *Client) StickersChangeStickerPosition(params *StickersChangeStickerPositionParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StickersCreateStickerSetParams struct {
	// flags position
	Masks     bool                   `flag:"0,encoded_in_bitflags"`
	Animated  bool                   `flag:"1,encoded_in_bitflags"`
	UserId    InputUser              `validate:"required"`
	Title     string                 `validate:"required"`
	ShortName string                 `validate:"required"`
	Thumb     InputDocument          `flag:"2"`
	Stickers  []*InputStickerSetItem `validate:"required"`
}

func (e *StickersCreateStickerSetParams) CRC() uint32 {
	return uint32(0xf1036780)
}

func (c *Client) StickersCreateStickerSet(params *StickersCreateStickerSetParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StickersRemoveStickerFromSetParams struct {
	Sticker InputDocument `validate:"required"`
}

func (e *StickersRemoveStickerFromSetParams) CRC() uint32 {
	return uint32(0xf7760f51)
}

func (c *Client) StickersRemoveStickerFromSet(params *StickersRemoveStickerFromSetParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type StickersSetStickerSetThumbParams struct {
	Stickerset InputStickerSet `validate:"required"`
	Thumb      InputDocument   `validate:"required"`
}

func (e *StickersSetStickerSetThumbParams) CRC() uint32 {
	return uint32(0x9a364e30)
}

func (c *Client) StickersSetStickerSetThumb(params *StickersSetStickerSetThumbParams) (MessagesStickerSet, error) {
	var resp MessagesStickerSet
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UpdatesGetChannelDifferenceParams struct {
	// flags position
	Force   bool                  `flag:"0,encoded_in_bitflags"`
	Channel InputChannel          `validate:"required"`
	Filter  ChannelMessagesFilter `validate:"required"`
	Pts     int32                 `validate:"required"`
	Limit   int32                 `validate:"required"`
}

func (e *UpdatesGetChannelDifferenceParams) CRC() uint32 {
	return uint32(0x3173d78)
}

func (c *Client) UpdatesGetChannelDifference(params *UpdatesGetChannelDifferenceParams) (UpdatesChannelDifference, error) {
	var resp UpdatesChannelDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UpdatesGetDifferenceParams struct {
	// flags position
	Pts           int32 `validate:"required"`
	PtsTotalLimit int32 `flag:"0"`
	Date          int32 `validate:"required"`
	Qts           int32 `validate:"required"`
}

func (e *UpdatesGetDifferenceParams) CRC() uint32 {
	return uint32(0x25939651)
}

func (c *Client) UpdatesGetDifference(params *UpdatesGetDifferenceParams) (UpdatesDifference, error) {
	var resp UpdatesDifference
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UpdatesGetStateParams struct{}

func (e *UpdatesGetStateParams) CRC() uint32 {
	return uint32(0xedd4882a)
}

func (c *Client) UpdatesGetState() (UpdatesState, error) {
	var resp UpdatesState
	err := c.MakeRequest2(&UpdatesGetStateParams{}, &resp)
	return resp, err
}

type UploadGetCdnFileParams struct {
	FileToken []byte `validate:"required"`
	Offset    int32  `validate:"required"`
	Limit     int32  `validate:"required"`
}

func (e *UploadGetCdnFileParams) CRC() uint32 {
	return uint32(0x2000bcc3)
}

func (c *Client) UploadGetCdnFile(params *UploadGetCdnFileParams) (UploadCdnFile, error) {
	var resp UploadCdnFile
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadGetCdnFileHashesParams struct {
	FileToken []byte `validate:"required"`
	Offset    int32  `validate:"required"`
}

func (e *UploadGetCdnFileHashesParams) CRC() uint32 {
	return uint32(0x4da54231)
}

func (c *Client) UploadGetCdnFileHashes(params *UploadGetCdnFileHashesParams) (FileHash, error) {
	var resp FileHash
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadGetFileParams struct {
	// flags position
	Precise      bool              `flag:"0,encoded_in_bitflags"`
	CdnSupported bool              `flag:"1,encoded_in_bitflags"`
	Location     InputFileLocation `validate:"required"`
	Offset       int32             `validate:"required"`
	Limit        int32             `validate:"required"`
}

func (e *UploadGetFileParams) CRC() uint32 {
	return uint32(0xb15a9afc)
}

func (c *Client) UploadGetFile(params *UploadGetFileParams) (UploadFile, error) {
	var resp UploadFile
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadGetFileHashesParams struct {
	Location InputFileLocation `validate:"required"`
	Offset   int32             `validate:"required"`
}

func (e *UploadGetFileHashesParams) CRC() uint32 {
	return uint32(0xc7025931)
}

func (c *Client) UploadGetFileHashes(params *UploadGetFileHashesParams) (FileHash, error) {
	var resp FileHash
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadGetWebFileParams struct {
	Location InputWebFileLocation `validate:"required"`
	Offset   int32                `validate:"required"`
	Limit    int32                `validate:"required"`
}

func (e *UploadGetWebFileParams) CRC() uint32 {
	return uint32(0x24e6818d)
}

func (c *Client) UploadGetWebFile(params *UploadGetWebFileParams) (UploadWebFile, error) {
	var resp UploadWebFile
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadReuploadCdnFileParams struct {
	FileToken    []byte `validate:"required"`
	RequestToken []byte `validate:"required"`
}

func (e *UploadReuploadCdnFileParams) CRC() uint32 {
	return uint32(0x9b2754a8)
}

func (c *Client) UploadReuploadCdnFile(params *UploadReuploadCdnFileParams) (FileHash, error) {
	var resp FileHash
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadSaveBigFilePartParams struct {
	FileId         int64  `validate:"required"`
	FilePart       int32  `validate:"required"`
	FileTotalParts int32  `validate:"required"`
	Bytes          []byte `validate:"required"`
}

func (e *UploadSaveBigFilePartParams) CRC() uint32 {
	return uint32(0xde7b673d)
}

func (c *Client) UploadSaveBigFilePart(params *UploadSaveBigFilePartParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UploadSaveFilePartParams struct {
	FileId   int64  `validate:"required"`
	FilePart int32  `validate:"required"`
	Bytes    []byte `validate:"required"`
}

func (e *UploadSaveFilePartParams) CRC() uint32 {
	return uint32(0xb304a621)
}

func (c *Client) UploadSaveFilePart(params *UploadSaveFilePartParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UsersGetFullUserParams struct {
	Id InputUser `validate:"required"`
}

func (e *UsersGetFullUserParams) CRC() uint32 {
	return uint32(0xca30a5b1)
}

func (c *Client) UsersGetFullUser(params *UsersGetFullUserParams) (UserFull, error) {
	var resp UserFull
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UsersGetUsersParams struct {
	Id []InputUser `validate:"required"`
}

func (e *UsersGetUsersParams) CRC() uint32 {
	return uint32(0xd91a548)
}

func (c *Client) UsersGetUsers(params *UsersGetUsersParams) (User, error) {
	var resp User
	err := c.MakeRequest2(params, &resp)
	return resp, err
}

type UsersSetSecureValueErrorsParams struct {
	Id     InputUser          `validate:"required"`
	Errors []SecureValueError `validate:"required"`
}

func (e *UsersSetSecureValueErrorsParams) CRC() uint32 {
	return uint32(0x90c894b5)
}

func (c *Client) UsersSetSecureValueErrors(params *UsersSetSecureValueErrorsParams) (serialize.Bool, error) {
	var resp serialize.Bool
	err := c.MakeRequest2(params, &resp)
	return resp, err
}
