package tl_test

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/xelaj/mtproto/encoding/tl"
	"github.com/xelaj/mtproto/serialize"
)

func TestDecode(t *testing.T) {
	type args struct {
		data []byte
		v    interface{}
	}
	tests := []struct {
		name     string
		args     args
		expected interface{}
		wantErr  bool
	}{
		{
			name: "test1",
			args: args{
				data: []byte{
					0xdc, 0xf8, 0xf1, 0x73, 0x02, 0x00, 0x00, 0x00, 0x01, 0xcc, 0x53, 0xbf, 0xcd, 0x88, 0xa7, 0x5f,
					0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x08, 0x09, 0xc2, 0x9e, 0x9c, 0x8f, 0xef, 0x1b,
					0xa7, 0x88, 0xa7, 0x5f, 0x09, 0xb7, 0x9e, 0xf3, 0xec, 0x68, 0x65, 0xce, 0x7f, 0xa7, 0x81, 0xc0,
					0x3b, 0x27, 0x75, 0x2c, 0x01, 0x14, 0x54, 0xbf, 0xcd, 0x88, 0xa7, 0x5f, 0x02, 0x00, 0x00, 0x00,
					0x14, 0x00, 0x00, 0x00, 0x59, 0xb4, 0xd6, 0x62, 0x15, 0xc4, 0xb5, 0x1c, 0x01, 0x00, 0x00, 0x00,
					0x9c, 0x8f, 0xef, 0x1b, 0xa7, 0x88, 0xa7, 0x5f,
				},
				v: &serialize.MessageContainer{},
			},
			expected: &serialize.MessageContainer{},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if err := tl.Decode(tt.args.data, tt.args.v); (err != nil) != tt.wantErr {
				t.Errorf("Decode() error = %v, wantErr %v", err, tt.wantErr)
			}
			assert.Equal(t, tt.expected, tt.args.v)
		})
	}
}
